// Code generated by ogen, DO NOT EDIT.

package api

import (
	"time"

	"github.com/go-faster/errors"
	"github.com/google/uuid"
)

// AssignRoleOK is response for AssignRole operation.
type AssignRoleOK struct{}

// DeleteCellGroupOK is response for DeleteCellGroup operation.
type DeleteCellGroupOK struct{}

// DeleteCellKindOK is response for DeleteCellKind operation.
type DeleteCellKindOK struct{}

// DeleteRoleBindingOK is response for DeleteRoleBinding operation.
type DeleteRoleBindingOK struct{}

// DeleteStorageCellOK is response for DeleteStorageCell operation.
type DeleteStorageCellOK struct{}

// DeleteStorageSpaceOK is response for DeleteStorageSpace operation.
type DeleteStorageSpaceOK struct{}

// DeleteSupplierOK is response for DeleteSupplier operation.
type DeleteSupplierOK struct{}

// DeleteUnitOK is response for DeleteUnit operation.
type DeleteUnitOK struct{}

// Ref: #/components/schemas/Employee
type Employee struct {
	ID        OptUUID     `json:"id"`
	Fullname  OptString   `json:"fullname"`
	Email     OptString   `json:"email"`
	CreatedAt OptDateTime `json:"created_at"`
}

// GetID returns the value of ID.
func (s *Employee) GetID() OptUUID {
	return s.ID
}

// GetFullname returns the value of Fullname.
func (s *Employee) GetFullname() OptString {
	return s.Fullname
}

// GetEmail returns the value of Email.
func (s *Employee) GetEmail() OptString {
	return s.Email
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Employee) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *Employee) SetID(val OptUUID) {
	s.ID = val
}

// SetFullname sets the value of Fullname.
func (s *Employee) SetFullname(val OptString) {
	s.Fullname = val
}

// SetEmail sets the value of Email.
func (s *Employee) SetEmail(val OptString) {
	s.Email = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Employee) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// Ref: #/components/schemas/Error
type Error struct {
	Code    OptString       `json:"code"`
	Message OptString       `json:"message"`
	Details OptErrorDetails `json:"details"`
}

// GetCode returns the value of Code.
func (s *Error) GetCode() OptString {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() OptString {
	return s.Message
}

// GetDetails returns the value of Details.
func (s *Error) GetDetails() OptErrorDetails {
	return s.Details
}

// SetCode sets the value of Code.
func (s *Error) SetCode(val OptString) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val OptString) {
	s.Message = val
}

// SetDetails sets the value of Details.
func (s *Error) SetDetails(val OptErrorDetails) {
	s.Details = val
}

func (*Error) getHealthRes() {}
func (*Error) getUnitsRes()  {}

type ErrorDetails struct{}

// Merged schema.
type GetCellGroupByIdOK struct {
	ID        OptUUID       `json:"id"`
	Name      OptString     `json:"name"`
	ShortName OptString     `json:"short_name"`
	SpaceID   OptUUID       `json:"space_id"`
	CreatedAt OptDateTime   `json:"created_at"`
	Cells     []StorageCell `json:"cells"`
}

// GetID returns the value of ID.
func (s *GetCellGroupByIdOK) GetID() OptUUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetCellGroupByIdOK) GetName() OptString {
	return s.Name
}

// GetShortName returns the value of ShortName.
func (s *GetCellGroupByIdOK) GetShortName() OptString {
	return s.ShortName
}

// GetSpaceID returns the value of SpaceID.
func (s *GetCellGroupByIdOK) GetSpaceID() OptUUID {
	return s.SpaceID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetCellGroupByIdOK) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetCells returns the value of Cells.
func (s *GetCellGroupByIdOK) GetCells() []StorageCell {
	return s.Cells
}

// SetID sets the value of ID.
func (s *GetCellGroupByIdOK) SetID(val OptUUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetCellGroupByIdOK) SetName(val OptString) {
	s.Name = val
}

// SetShortName sets the value of ShortName.
func (s *GetCellGroupByIdOK) SetShortName(val OptString) {
	s.ShortName = val
}

// SetSpaceID sets the value of SpaceID.
func (s *GetCellGroupByIdOK) SetSpaceID(val OptUUID) {
	s.SpaceID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetCellGroupByIdOK) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetCells sets the value of Cells.
func (s *GetCellGroupByIdOK) SetCells(val []StorageCell) {
	s.Cells = val
}

// Merged schema.
type GetCurrentEmployeeOK struct {
	ID           OptUUID       `json:"id"`
	Fullname     OptString     `json:"fullname"`
	Email        OptString     `json:"email"`
	CreatedAt    OptDateTime   `json:"created_at"`
	RoleBindings []RoleBinding `json:"role_bindings"`
}

// GetID returns the value of ID.
func (s *GetCurrentEmployeeOK) GetID() OptUUID {
	return s.ID
}

// GetFullname returns the value of Fullname.
func (s *GetCurrentEmployeeOK) GetFullname() OptString {
	return s.Fullname
}

// GetEmail returns the value of Email.
func (s *GetCurrentEmployeeOK) GetEmail() OptString {
	return s.Email
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetCurrentEmployeeOK) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetRoleBindings returns the value of RoleBindings.
func (s *GetCurrentEmployeeOK) GetRoleBindings() []RoleBinding {
	return s.RoleBindings
}

// SetID sets the value of ID.
func (s *GetCurrentEmployeeOK) SetID(val OptUUID) {
	s.ID = val
}

// SetFullname sets the value of Fullname.
func (s *GetCurrentEmployeeOK) SetFullname(val OptString) {
	s.Fullname = val
}

// SetEmail sets the value of Email.
func (s *GetCurrentEmployeeOK) SetEmail(val OptString) {
	s.Email = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetCurrentEmployeeOK) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetRoleBindings sets the value of RoleBindings.
func (s *GetCurrentEmployeeOK) SetRoleBindings(val []RoleBinding) {
	s.RoleBindings = val
}

// Merged schema.
type GetEmployeeByIdOK struct {
	ID           OptUUID       `json:"id"`
	Fullname     OptString     `json:"fullname"`
	Email        OptString     `json:"email"`
	CreatedAt    OptDateTime   `json:"created_at"`
	RoleBindings []RoleBinding `json:"role_bindings"`
}

// GetID returns the value of ID.
func (s *GetEmployeeByIdOK) GetID() OptUUID {
	return s.ID
}

// GetFullname returns the value of Fullname.
func (s *GetEmployeeByIdOK) GetFullname() OptString {
	return s.Fullname
}

// GetEmail returns the value of Email.
func (s *GetEmployeeByIdOK) GetEmail() OptString {
	return s.Email
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetEmployeeByIdOK) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetRoleBindings returns the value of RoleBindings.
func (s *GetEmployeeByIdOK) GetRoleBindings() []RoleBinding {
	return s.RoleBindings
}

// SetID sets the value of ID.
func (s *GetEmployeeByIdOK) SetID(val OptUUID) {
	s.ID = val
}

// SetFullname sets the value of Fullname.
func (s *GetEmployeeByIdOK) SetFullname(val OptString) {
	s.Fullname = val
}

// SetEmail sets the value of Email.
func (s *GetEmployeeByIdOK) SetEmail(val OptString) {
	s.Email = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetEmployeeByIdOK) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetRoleBindings sets the value of RoleBindings.
func (s *GetEmployeeByIdOK) SetRoleBindings(val []RoleBinding) {
	s.RoleBindings = val
}

type GetHealthOK struct {
	Status    OptGetHealthOKStatus `json:"status"`
	Version   OptString            `json:"version"`
	Timestamp OptDateTime          `json:"timestamp"`
}

// GetStatus returns the value of Status.
func (s *GetHealthOK) GetStatus() OptGetHealthOKStatus {
	return s.Status
}

// GetVersion returns the value of Version.
func (s *GetHealthOK) GetVersion() OptString {
	return s.Version
}

// GetTimestamp returns the value of Timestamp.
func (s *GetHealthOK) GetTimestamp() OptDateTime {
	return s.Timestamp
}

// SetStatus sets the value of Status.
func (s *GetHealthOK) SetStatus(val OptGetHealthOKStatus) {
	s.Status = val
}

// SetVersion sets the value of Version.
func (s *GetHealthOK) SetVersion(val OptString) {
	s.Version = val
}

// SetTimestamp sets the value of Timestamp.
func (s *GetHealthOK) SetTimestamp(val OptDateTime) {
	s.Timestamp = val
}

func (*GetHealthOK) getHealthRes() {}

type GetHealthOKStatus string

const (
	GetHealthOKStatusOK       GetHealthOKStatus = "OK"
	GetHealthOKStatusDEGRADED GetHealthOKStatus = "DEGRADED"
)

// AllValues returns all GetHealthOKStatus values.
func (GetHealthOKStatus) AllValues() []GetHealthOKStatus {
	return []GetHealthOKStatus{
		GetHealthOKStatusOK,
		GetHealthOKStatusDEGRADED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetHealthOKStatus) MarshalText() ([]byte, error) {
	switch s {
	case GetHealthOKStatusOK:
		return []byte(s), nil
	case GetHealthOKStatusDEGRADED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetHealthOKStatus) UnmarshalText(data []byte) error {
	switch GetHealthOKStatus(data) {
	case GetHealthOKStatusOK:
		*s = GetHealthOKStatusOK
		return nil
	case GetHealthOKStatusDEGRADED:
		*s = GetHealthOKStatusDEGRADED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetOrderByIdBadRequest Error

func (*GetOrderByIdBadRequest) getOrderByIdRes() {}

type GetOrderByIdForbidden Error

func (*GetOrderByIdForbidden) getOrderByIdRes() {}

type GetOrderByIdNotFound Error

func (*GetOrderByIdNotFound) getOrderByIdRes() {}

// Merged schema.
type GetOrderByIdOK struct {
	ID              OptUUID         `json:"id"`
	UnitID          OptUUID         `json:"unit_id"`
	OperationNumber OptString       `json:"operation_number"`
	Action          OptString       `json:"action"`
	Status          OptString       `json:"status"`
	CreatedAt       OptDateTime     `json:"created_at"`
	Items           []OperationItem `json:"items"`
}

// GetID returns the value of ID.
func (s *GetOrderByIdOK) GetID() OptUUID {
	return s.ID
}

// GetUnitID returns the value of UnitID.
func (s *GetOrderByIdOK) GetUnitID() OptUUID {
	return s.UnitID
}

// GetOperationNumber returns the value of OperationNumber.
func (s *GetOrderByIdOK) GetOperationNumber() OptString {
	return s.OperationNumber
}

// GetAction returns the value of Action.
func (s *GetOrderByIdOK) GetAction() OptString {
	return s.Action
}

// GetStatus returns the value of Status.
func (s *GetOrderByIdOK) GetStatus() OptString {
	return s.Status
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetOrderByIdOK) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetItems returns the value of Items.
func (s *GetOrderByIdOK) GetItems() []OperationItem {
	return s.Items
}

// SetID sets the value of ID.
func (s *GetOrderByIdOK) SetID(val OptUUID) {
	s.ID = val
}

// SetUnitID sets the value of UnitID.
func (s *GetOrderByIdOK) SetUnitID(val OptUUID) {
	s.UnitID = val
}

// SetOperationNumber sets the value of OperationNumber.
func (s *GetOrderByIdOK) SetOperationNumber(val OptString) {
	s.OperationNumber = val
}

// SetAction sets the value of Action.
func (s *GetOrderByIdOK) SetAction(val OptString) {
	s.Action = val
}

// SetStatus sets the value of Status.
func (s *GetOrderByIdOK) SetStatus(val OptString) {
	s.Status = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetOrderByIdOK) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetItems sets the value of Items.
func (s *GetOrderByIdOK) SetItems(val []OperationItem) {
	s.Items = val
}

func (*GetOrderByIdOK) getOrderByIdRes() {}

type GetOrderByIdUnauthorized Error

func (*GetOrderByIdUnauthorized) getOrderByIdRes() {}

type GetOrdersBadRequest Error

func (*GetOrdersBadRequest) getOrdersRes() {}

type GetOrdersForbidden Error

func (*GetOrdersForbidden) getOrdersRes() {}

// Merged schema.
type GetOrdersOK struct {
	// Merged property.
	Items    []GetOrdersOKItemsItem `json:"items"`
	Metadata OptPaginationMetadata  `json:"metadata"`
}

// GetItems returns the value of Items.
func (s *GetOrdersOK) GetItems() []GetOrdersOKItemsItem {
	return s.Items
}

// GetMetadata returns the value of Metadata.
func (s *GetOrdersOK) GetMetadata() OptPaginationMetadata {
	return s.Metadata
}

// SetItems sets the value of Items.
func (s *GetOrdersOK) SetItems(val []GetOrdersOKItemsItem) {
	s.Items = val
}

// SetMetadata sets the value of Metadata.
func (s *GetOrdersOK) SetMetadata(val OptPaginationMetadata) {
	s.Metadata = val
}

func (*GetOrdersOK) getOrdersRes() {}

// Merged schema.
type GetOrdersOKItemsItem struct {
	ID              OptUUID     `json:"id"`
	UnitID          OptUUID     `json:"unit_id"`
	OperationNumber OptString   `json:"operation_number"`
	Action          OptString   `json:"action"`
	Status          OptString   `json:"status"`
	CreatedAt       OptDateTime `json:"created_at"`
}

// GetID returns the value of ID.
func (s *GetOrdersOKItemsItem) GetID() OptUUID {
	return s.ID
}

// GetUnitID returns the value of UnitID.
func (s *GetOrdersOKItemsItem) GetUnitID() OptUUID {
	return s.UnitID
}

// GetOperationNumber returns the value of OperationNumber.
func (s *GetOrdersOKItemsItem) GetOperationNumber() OptString {
	return s.OperationNumber
}

// GetAction returns the value of Action.
func (s *GetOrdersOKItemsItem) GetAction() OptString {
	return s.Action
}

// GetStatus returns the value of Status.
func (s *GetOrdersOKItemsItem) GetStatus() OptString {
	return s.Status
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetOrdersOKItemsItem) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *GetOrdersOKItemsItem) SetID(val OptUUID) {
	s.ID = val
}

// SetUnitID sets the value of UnitID.
func (s *GetOrdersOKItemsItem) SetUnitID(val OptUUID) {
	s.UnitID = val
}

// SetOperationNumber sets the value of OperationNumber.
func (s *GetOrdersOKItemsItem) SetOperationNumber(val OptString) {
	s.OperationNumber = val
}

// SetAction sets the value of Action.
func (s *GetOrdersOKItemsItem) SetAction(val OptString) {
	s.Action = val
}

// SetStatus sets the value of Status.
func (s *GetOrdersOKItemsItem) SetStatus(val OptString) {
	s.Status = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetOrdersOKItemsItem) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

type GetOrdersUnauthorized Error

func (*GetOrdersUnauthorized) getOrdersRes() {}

// Merged schema.
type GetSpaceByIdOK struct {
	ID        OptUUID            `json:"id"`
	Name      OptString          `json:"name"`
	ShortName OptString          `json:"short_name"`
	UnitID    OptUUID            `json:"unit_id"`
	CreatedAt OptDateTime        `json:"created_at"`
	Groups    []StorageCellGroup `json:"groups"`
}

// GetID returns the value of ID.
func (s *GetSpaceByIdOK) GetID() OptUUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetSpaceByIdOK) GetName() OptString {
	return s.Name
}

// GetShortName returns the value of ShortName.
func (s *GetSpaceByIdOK) GetShortName() OptString {
	return s.ShortName
}

// GetUnitID returns the value of UnitID.
func (s *GetSpaceByIdOK) GetUnitID() OptUUID {
	return s.UnitID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetSpaceByIdOK) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetGroups returns the value of Groups.
func (s *GetSpaceByIdOK) GetGroups() []StorageCellGroup {
	return s.Groups
}

// SetID sets the value of ID.
func (s *GetSpaceByIdOK) SetID(val OptUUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetSpaceByIdOK) SetName(val OptString) {
	s.Name = val
}

// SetShortName sets the value of ShortName.
func (s *GetSpaceByIdOK) SetShortName(val OptString) {
	s.ShortName = val
}

// SetUnitID sets the value of UnitID.
func (s *GetSpaceByIdOK) SetUnitID(val OptUUID) {
	s.UnitID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetSpaceByIdOK) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetGroups sets the value of Groups.
func (s *GetSpaceByIdOK) SetGroups(val []StorageCellGroup) {
	s.Groups = val
}

type GetUnitByIdBadRequest Error

func (*GetUnitByIdBadRequest) getUnitByIdRes() {}

type GetUnitByIdForbidden Error

func (*GetUnitByIdForbidden) getUnitByIdRes() {}

type GetUnitByIdInternalServerError Error

func (*GetUnitByIdInternalServerError) getUnitByIdRes() {}

type GetUnitByIdNotFound Error

func (*GetUnitByIdNotFound) getUnitByIdRes() {}

// Merged schema.
type GetUnitByIdOK struct {
	ID        OptUUID        `json:"id"`
	Name      string         `json:"name"`
	Address   OptNilString   `json:"address"`
	CreatedAt OptDateTime    `json:"created_at"`
	Spaces    []StorageSpace `json:"spaces"`
}

// GetID returns the value of ID.
func (s *GetUnitByIdOK) GetID() OptUUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetUnitByIdOK) GetName() string {
	return s.Name
}

// GetAddress returns the value of Address.
func (s *GetUnitByIdOK) GetAddress() OptNilString {
	return s.Address
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetUnitByIdOK) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetSpaces returns the value of Spaces.
func (s *GetUnitByIdOK) GetSpaces() []StorageSpace {
	return s.Spaces
}

// SetID sets the value of ID.
func (s *GetUnitByIdOK) SetID(val OptUUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetUnitByIdOK) SetName(val string) {
	s.Name = val
}

// SetAddress sets the value of Address.
func (s *GetUnitByIdOK) SetAddress(val OptNilString) {
	s.Address = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetUnitByIdOK) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetSpaces sets the value of Spaces.
func (s *GetUnitByIdOK) SetSpaces(val []StorageSpace) {
	s.Spaces = val
}

func (*GetUnitByIdOK) getUnitByIdRes() {}

type GetUnitByIdUnauthorized Error

func (*GetUnitByIdUnauthorized) getUnitByIdRes() {}

// Merged schema.
type GetUnitsOK struct {
	// Merged property.
	Items    []GetUnitsOKItemsItem `json:"items"`
	Metadata OptPaginationMetadata `json:"metadata"`
}

// GetItems returns the value of Items.
func (s *GetUnitsOK) GetItems() []GetUnitsOKItemsItem {
	return s.Items
}

// GetMetadata returns the value of Metadata.
func (s *GetUnitsOK) GetMetadata() OptPaginationMetadata {
	return s.Metadata
}

// SetItems sets the value of Items.
func (s *GetUnitsOK) SetItems(val []GetUnitsOKItemsItem) {
	s.Items = val
}

// SetMetadata sets the value of Metadata.
func (s *GetUnitsOK) SetMetadata(val OptPaginationMetadata) {
	s.Metadata = val
}

func (*GetUnitsOK) getUnitsRes() {}

// Merged schema.
type GetUnitsOKItemsItem struct {
	ID        OptUUID      `json:"id"`
	Name      string       `json:"name"`
	Address   OptNilString `json:"address"`
	CreatedAt OptDateTime  `json:"created_at"`
}

// GetID returns the value of ID.
func (s *GetUnitsOKItemsItem) GetID() OptUUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetUnitsOKItemsItem) GetName() string {
	return s.Name
}

// GetAddress returns the value of Address.
func (s *GetUnitsOKItemsItem) GetAddress() OptNilString {
	return s.Address
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetUnitsOKItemsItem) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *GetUnitsOKItemsItem) SetID(val OptUUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetUnitsOKItemsItem) SetName(val string) {
	s.Name = val
}

// SetAddress sets the value of Address.
func (s *GetUnitsOKItemsItem) SetAddress(val OptNilString) {
	s.Address = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetUnitsOKItemsItem) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// Ref: #/components/schemas/OperationItem
type OperationItem struct {
	ItemInstanceID OptUUID     `json:"item_instance_id"`
	LocationText   []string    `json:"location_text"`
	CellID         OptUUID     `json:"cell_id"`
	CreatedAt      OptDateTime `json:"created_at"`
}

// GetItemInstanceID returns the value of ItemInstanceID.
func (s *OperationItem) GetItemInstanceID() OptUUID {
	return s.ItemInstanceID
}

// GetLocationText returns the value of LocationText.
func (s *OperationItem) GetLocationText() []string {
	return s.LocationText
}

// GetCellID returns the value of CellID.
func (s *OperationItem) GetCellID() OptUUID {
	return s.CellID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *OperationItem) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// SetItemInstanceID sets the value of ItemInstanceID.
func (s *OperationItem) SetItemInstanceID(val OptUUID) {
	s.ItemInstanceID = val
}

// SetLocationText sets the value of LocationText.
func (s *OperationItem) SetLocationText(val []string) {
	s.LocationText = val
}

// SetCellID sets the value of CellID.
func (s *OperationItem) SetCellID(val OptUUID) {
	s.CellID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *OperationItem) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptErrorDetails returns new OptErrorDetails with value set to v.
func NewOptErrorDetails(v *ErrorDetails) OptErrorDetails {
	return OptErrorDetails{
		Value: v,
		Set:   true,
	}
}

// OptErrorDetails is optional *ErrorDetails.
type OptErrorDetails struct {
	Value *ErrorDetails
	Set   bool
}

// IsSet returns true if OptErrorDetails was set.
func (o OptErrorDetails) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptErrorDetails) Reset() {
	var v *ErrorDetails
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptErrorDetails) SetTo(v *ErrorDetails) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptErrorDetails) Get() (v *ErrorDetails, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptErrorDetails) Or(d *ErrorDetails) *ErrorDetails {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetHealthOKStatus returns new OptGetHealthOKStatus with value set to v.
func NewOptGetHealthOKStatus(v GetHealthOKStatus) OptGetHealthOKStatus {
	return OptGetHealthOKStatus{
		Value: v,
		Set:   true,
	}
}

// OptGetHealthOKStatus is optional GetHealthOKStatus.
type OptGetHealthOKStatus struct {
	Value GetHealthOKStatus
	Set   bool
}

// IsSet returns true if OptGetHealthOKStatus was set.
func (o OptGetHealthOKStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetHealthOKStatus) Reset() {
	var v GetHealthOKStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetHealthOKStatus) SetTo(v GetHealthOKStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetHealthOKStatus) Get() (v GetHealthOKStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetHealthOKStatus) Or(d GetHealthOKStatus) GetHealthOKStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaginationMetadata returns new OptPaginationMetadata with value set to v.
func NewOptPaginationMetadata(v PaginationMetadata) OptPaginationMetadata {
	return OptPaginationMetadata{
		Value: v,
		Set:   true,
	}
}

// OptPaginationMetadata is optional PaginationMetadata.
type OptPaginationMetadata struct {
	Value PaginationMetadata
	Set   bool
}

// IsSet returns true if OptPaginationMetadata was set.
func (o OptPaginationMetadata) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaginationMetadata) Reset() {
	var v PaginationMetadata
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaginationMetadata) SetTo(v PaginationMetadata) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaginationMetadata) Get() (v PaginationMetadata, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaginationMetadata) Or(d PaginationMetadata) PaginationMetadata {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRole returns new OptRole with value set to v.
func NewOptRole(v Role) OptRole {
	return OptRole{
		Value: v,
		Set:   true,
	}
}

// OptRole is optional Role.
type OptRole struct {
	Value Role
	Set   bool
}

// IsSet returns true if OptRole was set.
func (o OptRole) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRole) Reset() {
	var v Role
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRole) SetTo(v Role) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRole) Get() (v Role, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRole) Or(d Role) Role {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUUID returns new OptUUID with value set to v.
func NewOptUUID(v uuid.UUID) OptUUID {
	return OptUUID{
		Value: v,
		Set:   true,
	}
}

// OptUUID is optional uuid.UUID.
type OptUUID struct {
	Value uuid.UUID
	Set   bool
}

// IsSet returns true if OptUUID was set.
func (o OptUUID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUUID) Reset() {
	var v uuid.UUID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUUID) SetTo(v uuid.UUID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUUID) Get() (v uuid.UUID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/PaginationMetadata
type PaginationMetadata struct {
	Offset OptInt `json:"offset"`
	Limit  OptInt `json:"limit"`
	Total  OptInt `json:"total"`
}

// GetOffset returns the value of Offset.
func (s *PaginationMetadata) GetOffset() OptInt {
	return s.Offset
}

// GetLimit returns the value of Limit.
func (s *PaginationMetadata) GetLimit() OptInt {
	return s.Limit
}

// GetTotal returns the value of Total.
func (s *PaginationMetadata) GetTotal() OptInt {
	return s.Total
}

// SetOffset sets the value of Offset.
func (s *PaginationMetadata) SetOffset(val OptInt) {
	s.Offset = val
}

// SetLimit sets the value of Limit.
func (s *PaginationMetadata) SetLimit(val OptInt) {
	s.Limit = val
}

// SetTotal sets the value of Total.
func (s *PaginationMetadata) SetTotal(val OptInt) {
	s.Total = val
}

// Ref: #/components/schemas/Role
type Role struct {
	ID          OptUUID   `json:"id"`
	Name        OptString `json:"name"`
	Permissions []string  `json:"permissions"`
}

// GetID returns the value of ID.
func (s *Role) GetID() OptUUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *Role) GetName() OptString {
	return s.Name
}

// GetPermissions returns the value of Permissions.
func (s *Role) GetPermissions() []string {
	return s.Permissions
}

// SetID sets the value of ID.
func (s *Role) SetID(val OptUUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Role) SetName(val OptString) {
	s.Name = val
}

// SetPermissions sets the value of Permissions.
func (s *Role) SetPermissions(val []string) {
	s.Permissions = val
}

// Ref: #/components/schemas/RoleBinding
type RoleBinding struct {
	ID         OptUUID   `json:"id"`
	EmployeeID OptUUID   `json:"employee_id"`
	Role       OptRole   `json:"role"`
	TargetID   OptUUID   `json:"target_id"`
	TargetType OptString `json:"target_type"`
}

// GetID returns the value of ID.
func (s *RoleBinding) GetID() OptUUID {
	return s.ID
}

// GetEmployeeID returns the value of EmployeeID.
func (s *RoleBinding) GetEmployeeID() OptUUID {
	return s.EmployeeID
}

// GetRole returns the value of Role.
func (s *RoleBinding) GetRole() OptRole {
	return s.Role
}

// GetTargetID returns the value of TargetID.
func (s *RoleBinding) GetTargetID() OptUUID {
	return s.TargetID
}

// GetTargetType returns the value of TargetType.
func (s *RoleBinding) GetTargetType() OptString {
	return s.TargetType
}

// SetID sets the value of ID.
func (s *RoleBinding) SetID(val OptUUID) {
	s.ID = val
}

// SetEmployeeID sets the value of EmployeeID.
func (s *RoleBinding) SetEmployeeID(val OptUUID) {
	s.EmployeeID = val
}

// SetRole sets the value of Role.
func (s *RoleBinding) SetRole(val OptRole) {
	s.Role = val
}

// SetTargetID sets the value of TargetID.
func (s *RoleBinding) SetTargetID(val OptUUID) {
	s.TargetID = val
}

// SetTargetType sets the value of TargetType.
func (s *RoleBinding) SetTargetType(val OptString) {
	s.TargetType = val
}

// Ref: #/components/schemas/StorageCell
type StorageCell struct {
	ID        OptUUID     `json:"id"`
	ShortName OptString   `json:"short_name"`
	GroupID   OptUUID     `json:"group_id"`
	KindID    OptUUID     `json:"kind_id"`
	Rack      OptString   `json:"rack"`
	Level     OptInt      `json:"level"`
	Position  OptInt      `json:"position"`
	CreatedAt OptDateTime `json:"created_at"`
}

// GetID returns the value of ID.
func (s *StorageCell) GetID() OptUUID {
	return s.ID
}

// GetShortName returns the value of ShortName.
func (s *StorageCell) GetShortName() OptString {
	return s.ShortName
}

// GetGroupID returns the value of GroupID.
func (s *StorageCell) GetGroupID() OptUUID {
	return s.GroupID
}

// GetKindID returns the value of KindID.
func (s *StorageCell) GetKindID() OptUUID {
	return s.KindID
}

// GetRack returns the value of Rack.
func (s *StorageCell) GetRack() OptString {
	return s.Rack
}

// GetLevel returns the value of Level.
func (s *StorageCell) GetLevel() OptInt {
	return s.Level
}

// GetPosition returns the value of Position.
func (s *StorageCell) GetPosition() OptInt {
	return s.Position
}

// GetCreatedAt returns the value of CreatedAt.
func (s *StorageCell) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *StorageCell) SetID(val OptUUID) {
	s.ID = val
}

// SetShortName sets the value of ShortName.
func (s *StorageCell) SetShortName(val OptString) {
	s.ShortName = val
}

// SetGroupID sets the value of GroupID.
func (s *StorageCell) SetGroupID(val OptUUID) {
	s.GroupID = val
}

// SetKindID sets the value of KindID.
func (s *StorageCell) SetKindID(val OptUUID) {
	s.KindID = val
}

// SetRack sets the value of Rack.
func (s *StorageCell) SetRack(val OptString) {
	s.Rack = val
}

// SetLevel sets the value of Level.
func (s *StorageCell) SetLevel(val OptInt) {
	s.Level = val
}

// SetPosition sets the value of Position.
func (s *StorageCell) SetPosition(val OptInt) {
	s.Position = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *StorageCell) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// Ref: #/components/schemas/StorageCellGroup
type StorageCellGroup struct {
	ID        OptUUID     `json:"id"`
	Name      OptString   `json:"name"`
	ShortName OptString   `json:"short_name"`
	SpaceID   OptUUID     `json:"space_id"`
	CreatedAt OptDateTime `json:"created_at"`
}

// GetID returns the value of ID.
func (s *StorageCellGroup) GetID() OptUUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *StorageCellGroup) GetName() OptString {
	return s.Name
}

// GetShortName returns the value of ShortName.
func (s *StorageCellGroup) GetShortName() OptString {
	return s.ShortName
}

// GetSpaceID returns the value of SpaceID.
func (s *StorageCellGroup) GetSpaceID() OptUUID {
	return s.SpaceID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *StorageCellGroup) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *StorageCellGroup) SetID(val OptUUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *StorageCellGroup) SetName(val OptString) {
	s.Name = val
}

// SetShortName sets the value of ShortName.
func (s *StorageCellGroup) SetShortName(val OptString) {
	s.ShortName = val
}

// SetSpaceID sets the value of SpaceID.
func (s *StorageCellGroup) SetSpaceID(val OptUUID) {
	s.SpaceID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *StorageCellGroup) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// Ref: #/components/schemas/StorageCellKind
type StorageCellKind struct {
	ID        OptUUID     `json:"id"`
	Name      OptString   `json:"name"`
	Height    OptFloat64  `json:"height"`
	Width     OptFloat64  `json:"width"`
	Depth     OptFloat64  `json:"depth"`
	MaxWeight OptFloat64  `json:"max_weight"`
	CreatedAt OptDateTime `json:"created_at"`
}

// GetID returns the value of ID.
func (s *StorageCellKind) GetID() OptUUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *StorageCellKind) GetName() OptString {
	return s.Name
}

// GetHeight returns the value of Height.
func (s *StorageCellKind) GetHeight() OptFloat64 {
	return s.Height
}

// GetWidth returns the value of Width.
func (s *StorageCellKind) GetWidth() OptFloat64 {
	return s.Width
}

// GetDepth returns the value of Depth.
func (s *StorageCellKind) GetDepth() OptFloat64 {
	return s.Depth
}

// GetMaxWeight returns the value of MaxWeight.
func (s *StorageCellKind) GetMaxWeight() OptFloat64 {
	return s.MaxWeight
}

// GetCreatedAt returns the value of CreatedAt.
func (s *StorageCellKind) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *StorageCellKind) SetID(val OptUUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *StorageCellKind) SetName(val OptString) {
	s.Name = val
}

// SetHeight sets the value of Height.
func (s *StorageCellKind) SetHeight(val OptFloat64) {
	s.Height = val
}

// SetWidth sets the value of Width.
func (s *StorageCellKind) SetWidth(val OptFloat64) {
	s.Width = val
}

// SetDepth sets the value of Depth.
func (s *StorageCellKind) SetDepth(val OptFloat64) {
	s.Depth = val
}

// SetMaxWeight sets the value of MaxWeight.
func (s *StorageCellKind) SetMaxWeight(val OptFloat64) {
	s.MaxWeight = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *StorageCellKind) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// Ref: #/components/schemas/StorageSpace
type StorageSpace struct {
	ID        OptUUID     `json:"id"`
	Name      OptString   `json:"name"`
	ShortName OptString   `json:"short_name"`
	UnitID    OptUUID     `json:"unit_id"`
	CreatedAt OptDateTime `json:"created_at"`
}

// GetID returns the value of ID.
func (s *StorageSpace) GetID() OptUUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *StorageSpace) GetName() OptString {
	return s.Name
}

// GetShortName returns the value of ShortName.
func (s *StorageSpace) GetShortName() OptString {
	return s.ShortName
}

// GetUnitID returns the value of UnitID.
func (s *StorageSpace) GetUnitID() OptUUID {
	return s.UnitID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *StorageSpace) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *StorageSpace) SetID(val OptUUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *StorageSpace) SetName(val OptString) {
	s.Name = val
}

// SetShortName sets the value of ShortName.
func (s *StorageSpace) SetShortName(val OptString) {
	s.ShortName = val
}

// SetUnitID sets the value of UnitID.
func (s *StorageSpace) SetUnitID(val OptUUID) {
	s.UnitID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *StorageSpace) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// Ref: #/components/schemas/Supplier
type Supplier struct {
	ID        OptUUID     `json:"id"`
	Name      OptString   `json:"name"`
	LegalRuID OptInt      `json:"legal_ru_id"`
	CreatedAt OptDateTime `json:"created_at"`
}

// GetID returns the value of ID.
func (s *Supplier) GetID() OptUUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *Supplier) GetName() OptString {
	return s.Name
}

// GetLegalRuID returns the value of LegalRuID.
func (s *Supplier) GetLegalRuID() OptInt {
	return s.LegalRuID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Supplier) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *Supplier) SetID(val OptUUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Supplier) SetName(val OptString) {
	s.Name = val
}

// SetLegalRuID sets the value of LegalRuID.
func (s *Supplier) SetLegalRuID(val OptInt) {
	s.LegalRuID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Supplier) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// Ref: #/components/schemas/Unit
type Unit struct {
	ID        OptUUID      `json:"id"`
	Name      string       `json:"name"`
	Address   OptNilString `json:"address"`
	CreatedAt OptDateTime  `json:"created_at"`
}

// GetID returns the value of ID.
func (s *Unit) GetID() OptUUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *Unit) GetName() string {
	return s.Name
}

// GetAddress returns the value of Address.
func (s *Unit) GetAddress() OptNilString {
	return s.Address
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Unit) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *Unit) SetID(val OptUUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Unit) SetName(val string) {
	s.Name = val
}

// SetAddress sets the value of Address.
func (s *Unit) SetAddress(val OptNilString) {
	s.Address = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Unit) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}
