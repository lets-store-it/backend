// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// AssignRole implements assignRole operation.
	//
	// Assign Role to Employee.
	//
	// PATCH /employees/{id}/role-bindings
	AssignRole(ctx context.Context, req *RoleBinding, params AssignRoleParams) error
	// CreateCellGroup implements createCellGroup operation.
	//
	// Create Cell Group in Storage Space.
	//
	// POST /units/{unitId}/spaces/{spaceId}/groups
	CreateCellGroup(ctx context.Context, req *StorageCellGroup, params CreateCellGroupParams) (*StorageCellGroup, error)
	// CreateCellKind implements createCellKind operation.
	//
	// Create Storage Cell Kind.
	//
	// POST /cell-kinds
	CreateCellKind(ctx context.Context, req *StorageCellKind) (*StorageCellKind, error)
	// CreateStorageCell implements createStorageCell operation.
	//
	// Create Storage Cell in Cell Group.
	//
	// POST /units/{unitId}/spaces/{spaceId}/groups/{groupId}/cells
	CreateStorageCell(ctx context.Context, req *StorageCell, params CreateStorageCellParams) (*StorageCell, error)
	// CreateStorageSpace implements createStorageSpace operation.
	//
	// Create Storage Space.
	//
	// POST /units/{unitId}/spaces
	CreateStorageSpace(ctx context.Context, req *StorageSpace, params CreateStorageSpaceParams) (*StorageSpace, error)
	// CreateSupplier implements createSupplier operation.
	//
	// Create Supplier.
	//
	// POST /suppliers
	CreateSupplier(ctx context.Context, req *Supplier) (*Supplier, error)
	// CreateUnit implements createUnit operation.
	//
	// Create Organization Unit.
	//
	// POST /units
	CreateUnit(ctx context.Context, req *Unit) (*Unit, error)
	// DeleteCellGroup implements deleteCellGroup operation.
	//
	// Delete Cell Group.
	//
	// DELETE /units/{unitId}/spaces/{spaceId}/groups/{groupId}
	DeleteCellGroup(ctx context.Context, params DeleteCellGroupParams) error
	// DeleteCellKind implements deleteCellKind operation.
	//
	// Delete Storage Cell Kind.
	//
	// DELETE /cell-kinds/{id}
	DeleteCellKind(ctx context.Context, params DeleteCellKindParams) error
	// DeleteRoleBinding implements deleteRoleBinding operation.
	//
	// Delete Role Binding.
	//
	// DELETE /employees/{id}/role-bindings/{roleBindingId}
	DeleteRoleBinding(ctx context.Context, params DeleteRoleBindingParams) error
	// DeleteStorageCell implements deleteStorageCell operation.
	//
	// Delete Storage Cell.
	//
	// DELETE /units/{unitId}/spaces/{spaceId}/groups/{groupId}/cells/{cellId}
	DeleteStorageCell(ctx context.Context, params DeleteStorageCellParams) error
	// DeleteStorageSpace implements deleteStorageSpace operation.
	//
	// Delete Storage Space.
	//
	// DELETE /units/{unitId}/spaces/{spaceId}
	DeleteStorageSpace(ctx context.Context, params DeleteStorageSpaceParams) error
	// DeleteSupplier implements deleteSupplier operation.
	//
	// Delete Supplier.
	//
	// DELETE /suppliers/{id}
	DeleteSupplier(ctx context.Context, params DeleteSupplierParams) error
	// DeleteUnit implements deleteUnit operation.
	//
	// Delete Organization Unit.
	//
	// DELETE /units/{id}
	DeleteUnit(ctx context.Context, params DeleteUnitParams) error
	// GetCellGroupById implements getCellGroupById operation.
	//
	// Get Cell Group by ID with Cells.
	//
	// GET /units/{unitId}/spaces/{spaceId}/groups/{groupId}
	GetCellGroupById(ctx context.Context, params GetCellGroupByIdParams) (*GetCellGroupByIdOK, error)
	// GetCellGroups implements getCellGroups operation.
	//
	// Get list of Cell Groups in Storage Space.
	//
	// GET /units/{unitId}/spaces/{spaceId}/groups
	GetCellGroups(ctx context.Context, params GetCellGroupsParams) ([]StorageCellGroup, error)
	// GetCellKindById implements getCellKindById operation.
	//
	// Get Storage Cell Kind by ID.
	//
	// GET /cell-kinds/{id}
	GetCellKindById(ctx context.Context, params GetCellKindByIdParams) (*StorageCellKind, error)
	// GetCellKinds implements getCellKinds operation.
	//
	// Get list of Storage Cell Kinds.
	//
	// GET /cell-kinds
	GetCellKinds(ctx context.Context) ([]StorageCellKind, error)
	// GetCurrentEmployee implements getCurrentEmployee operation.
	//
	// Get current Employee.
	//
	// GET /me
	GetCurrentEmployee(ctx context.Context) (*GetCurrentEmployeeOK, error)
	// GetEmployeeById implements getEmployeeById operation.
	//
	// Get Employee by ID.
	//
	// GET /employees/{id}
	GetEmployeeById(ctx context.Context, params GetEmployeeByIdParams) (*GetEmployeeByIdOK, error)
	// GetEmployees implements getEmployees operation.
	//
	// Get list of Employees in Organization.
	//
	// GET /employees
	GetEmployees(ctx context.Context) ([]Employee, error)
	// GetHealth implements getHealth operation.
	//
	// Get API health status.
	//
	// GET /health
	GetHealth(ctx context.Context) (GetHealthRes, error)
	// GetOrderById implements getOrderById operation.
	//
	// Get Order by ID with Items.
	//
	// GET /orders/{id}
	GetOrderById(ctx context.Context, params GetOrderByIdParams) (GetOrderByIdRes, error)
	// GetOrders implements getOrders operation.
	//
	// Get list of Orders.
	//
	// GET /orders
	GetOrders(ctx context.Context, params GetOrdersParams) (GetOrdersRes, error)
	// GetRoleBindings implements getRoleBindings operation.
	//
	// Get list of Role Bindings for Employee.
	//
	// GET /employees/{id}/role-bindings
	GetRoleBindings(ctx context.Context, params GetRoleBindingsParams) ([]RoleBinding, error)
	// GetRoles implements getRoles operation.
	//
	// Get list of Roles.
	//
	// GET /rbac/roles
	GetRoles(ctx context.Context) ([]Role, error)
	// GetSpaceById implements getSpaceById operation.
	//
	// Get Storage Space by ID with Groups.
	//
	// GET /units/{unitId}/spaces/{spaceId}
	GetSpaceById(ctx context.Context, params GetSpaceByIdParams) (*GetSpaceByIdOK, error)
	// GetSpaces implements getSpaces operation.
	//
	// Get list of Storage Spaces in Unit.
	//
	// GET /units/{unitId}/spaces
	GetSpaces(ctx context.Context, params GetSpacesParams) ([]StorageSpace, error)
	// GetStorageCellById implements getStorageCellById operation.
	//
	// Get Storage Cell by ID.
	//
	// GET /units/{unitId}/spaces/{spaceId}/groups/{groupId}/cells/{cellId}
	GetStorageCellById(ctx context.Context, params GetStorageCellByIdParams) (*StorageCell, error)
	// GetStorageCells implements getStorageCells operation.
	//
	// Get list of Storage Cells in Cell Group.
	//
	// GET /units/{unitId}/spaces/{spaceId}/groups/{groupId}/cells
	GetStorageCells(ctx context.Context, params GetStorageCellsParams) ([]StorageCell, error)
	// GetSupplierById implements getSupplierById operation.
	//
	// Get Supplier by ID.
	//
	// GET /suppliers/{id}
	GetSupplierById(ctx context.Context, params GetSupplierByIdParams) (*Supplier, error)
	// GetSuppliers implements getSuppliers operation.
	//
	// Get list of Suppliers.
	//
	// GET /suppliers
	GetSuppliers(ctx context.Context) ([]Supplier, error)
	// GetUnitById implements getUnitById operation.
	//
	// Get Unit by ID with Spaces.
	//
	// GET /units/{id}
	GetUnitById(ctx context.Context, params GetUnitByIdParams) (GetUnitByIdRes, error)
	// GetUnits implements getUnits operation.
	//
	// Get list of Organization Units.
	//
	// GET /units
	GetUnits(ctx context.Context, params GetUnitsParams) (GetUnitsRes, error)
	// UpdateCellGroup implements updateCellGroup operation.
	//
	// Update Cell Group.
	//
	// PUT /units/{unitId}/spaces/{spaceId}/groups/{groupId}
	UpdateCellGroup(ctx context.Context, req *StorageCellGroup, params UpdateCellGroupParams) (*StorageCellGroup, error)
	// UpdateCellKind implements updateCellKind operation.
	//
	// Update Storage Cell Kind.
	//
	// PUT /cell-kinds/{id}
	UpdateCellKind(ctx context.Context, req *StorageCellKind, params UpdateCellKindParams) (*StorageCellKind, error)
	// UpdateStorageCell implements updateStorageCell operation.
	//
	// Update Storage Cell.
	//
	// PUT /units/{unitId}/spaces/{spaceId}/groups/{groupId}/cells/{cellId}
	UpdateStorageCell(ctx context.Context, req *StorageCell, params UpdateStorageCellParams) (*StorageCell, error)
	// UpdateStorageSpace implements updateStorageSpace operation.
	//
	// Update Storage Space.
	//
	// PUT /units/{unitId}/spaces/{spaceId}
	UpdateStorageSpace(ctx context.Context, req *StorageSpace, params UpdateStorageSpaceParams) (*StorageSpace, error)
	// UpdateSupplier implements updateSupplier operation.
	//
	// Update Supplier.
	//
	// PUT /suppliers/{id}
	UpdateSupplier(ctx context.Context, req *Supplier, params UpdateSupplierParams) (*Supplier, error)
	// UpdateUnit implements updateUnit operation.
	//
	// Update Organization Unit.
	//
	// PUT /units/{id}
	UpdateUnit(ctx context.Context, req *Unit, params UpdateUnitParams) (*Unit, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
