// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// CreateCell implements createCell operation.
	//
	// Create Cells.
	//
	// POST /cells-groups/{groupId}/cells
	CreateCell(ctx context.Context, req *CreateCellRequest, params CreateCellParams) (*CreateCellResponse, error)
	// CreateCellsGroup implements createCellsGroup operation.
	//
	// Create Cells Group.
	//
	// POST /cells-groups
	CreateCellsGroup(ctx context.Context, req *CreateCellsGroupRequest) (*CreateCellsGroupResponse, error)
	// CreateItem implements createItem operation.
	//
	// Create Item.
	//
	// POST /items
	CreateItem(ctx context.Context, req *CreateItemRequest) (*CreateItemResponse, error)
	// CreateOrganization implements createOrganization operation.
	//
	// Create Organization.
	//
	// POST /orgs
	CreateOrganization(ctx context.Context, req *CreateOrganizationRequest) (*CreateOrganizationResponse, error)
	// CreateStorageGroup implements createStorageGroup operation.
	//
	// Create Storage Group.
	//
	// POST /storage-groups
	CreateStorageGroup(ctx context.Context, req *CreateStorageGroupRequest) (*CreateStorageGroupResponse, error)
	// CreateUnit implements createUnit operation.
	//
	// Create Organization Unit.
	//
	// POST /units
	CreateUnit(ctx context.Context, req *CreateOrganizationUnitRequest) (*CreateOrganizationUnitResponse, error)
	// DeleteCell implements deleteCell operation.
	//
	// Delete Cell.
	//
	// DELETE /cells-groups/{groupId}/cells/{cellId}
	DeleteCell(ctx context.Context, params DeleteCellParams) error
	// DeleteCellsGroup implements deleteCellsGroup operation.
	//
	// Delete Cells Group.
	//
	// DELETE /cells-groups/{groupId}
	DeleteCellsGroup(ctx context.Context, params DeleteCellsGroupParams) error
	// DeleteItem implements deleteItem operation.
	//
	// Delete Item.
	//
	// DELETE /items/{id}
	DeleteItem(ctx context.Context, params DeleteItemParams) error
	// DeleteOrganization implements deleteOrganization operation.
	//
	// Delete Organization.
	//
	// DELETE /orgs/{id}
	DeleteOrganization(ctx context.Context, params DeleteOrganizationParams) error
	// DeleteOrganizationUnit implements deleteOrganizationUnit operation.
	//
	// Delete Organization Unit.
	//
	// DELETE /units/{id}
	DeleteOrganizationUnit(ctx context.Context, params DeleteOrganizationUnitParams) error
	// DeleteStorageGroup implements deleteStorageGroup operation.
	//
	// Delete Storage Group.
	//
	// DELETE /storage-groups/{id}
	DeleteStorageGroup(ctx context.Context, params DeleteStorageGroupParams) error
	// ExchangeYandexAccessToken implements exchangeYandexAccessToken operation.
	//
	// Exchange Yandex Access token for Session token.
	//
	// POST /auth/oauth2/yandex
	ExchangeYandexAccessToken(ctx context.Context, req *ExchangeYandexAccessTokenReq) (*AuthResponse, error)
	// GetCellById implements getCellById operation.
	//
	// Get Cell by ID.
	//
	// GET /cells-groups/{groupId}/cells/{cellId}
	GetCellById(ctx context.Context, params GetCellByIdParams) (*GetCellByIdResponse, error)
	// GetCells implements getCells operation.
	//
	// Get list of Cells.
	//
	// GET /cells-groups/{groupId}/cells
	GetCells(ctx context.Context, params GetCellsParams) (*GetCellsResponse, error)
	// GetCellsGroupById implements getCellsGroupById operation.
	//
	// Get Cells Group by ID.
	//
	// GET /cells-groups/{groupId}
	GetCellsGroupById(ctx context.Context, params GetCellsGroupByIdParams) (*GetCellsGroupByIdResponse, error)
	// GetCellsGroups implements getCellsGroups operation.
	//
	// Get list of Cells Groups.
	//
	// GET /cells-groups
	GetCellsGroups(ctx context.Context) (*GetCellsGroupsResponse, error)
	// GetCurrentUser implements getCurrentUser operation.
	//
	// Get Current User.
	//
	// GET /me
	GetCurrentUser(ctx context.Context) (*GetCurrentUserResponse, error)
	// GetItemById implements getItemById operation.
	//
	// Get Item by ID.
	//
	// GET /items/{id}
	GetItemById(ctx context.Context, params GetItemByIdParams) (*GetItemByIdResponse, error)
	// GetItems implements getItems operation.
	//
	// Get list of Items.
	//
	// GET /items
	GetItems(ctx context.Context) (*GetItemsResponse, error)
	// GetOrganizationById implements getOrganizationById operation.
	//
	// Get Organization by ID.
	//
	// GET /orgs/{id}
	GetOrganizationById(ctx context.Context, params GetOrganizationByIdParams) (*GetOrganizationByIdResponse, error)
	// GetOrganizationUnitById implements getOrganizationUnitById operation.
	//
	// Get Unit by ID.
	//
	// GET /units/{id}
	GetOrganizationUnitById(ctx context.Context, params GetOrganizationUnitByIdParams) (*GetOrganizationUnitByIdResponse, error)
	// GetOrganizationUnits implements getOrganizationUnits operation.
	//
	// Get list of Organization Units.
	//
	// GET /units
	GetOrganizationUnits(ctx context.Context) (*GetOrganizationUnitsResponse, error)
	// GetOrganizations implements getOrganizations operation.
	//
	// Get list of Organizations.
	//
	// GET /orgs
	GetOrganizations(ctx context.Context) (*GetOrganizationsResponse, error)
	// GetStorageGroupById implements getStorageGroupById operation.
	//
	// Get Storage Group by ID.
	//
	// GET /storage-groups/{id}
	GetStorageGroupById(ctx context.Context, params GetStorageGroupByIdParams) (*GetStorageGroupByIdResponse, error)
	// GetStorageGroups implements getStorageGroups operation.
	//
	// Get list of Storage Groups.
	//
	// GET /storage-groups
	GetStorageGroups(ctx context.Context) (*GetStorageGroupsResponse, error)
	// PatchCell implements patchCell operation.
	//
	// Patch Cell.
	//
	// PATCH /cells-groups/{groupId}/cells/{cellId}
	PatchCell(ctx context.Context, req *PatchCellRequest, params PatchCellParams) (*PatchCellResponse, error)
	// PatchCellsGroup implements patchCellsGroup operation.
	//
	// Patch Cells Group.
	//
	// PATCH /cells-groups/{groupId}
	PatchCellsGroup(ctx context.Context, req *PatchCellsGroupRequest, params PatchCellsGroupParams) (*PatchCellsGroupResponse, error)
	// PatchItem implements patchItem operation.
	//
	// Patch Item.
	//
	// PATCH /items/{id}
	PatchItem(ctx context.Context, req *PatchItemRequest, params PatchItemParams) (*PatchItemResponse, error)
	// PatchOrganization implements patchOrganization operation.
	//
	// Update Organization.
	//
	// PATCH /orgs/{id}
	PatchOrganization(ctx context.Context, req *PatchOrganizationRequest, params PatchOrganizationParams) (*PatchOrganizationResponse, error)
	// PatchOrganizationUnit implements patchOrganizationUnit operation.
	//
	// Patch Organization Unit.
	//
	// PATCH /units/{id}
	PatchOrganizationUnit(ctx context.Context, req *PatchOrganizationUnitRequest, params PatchOrganizationUnitParams) (*PatchOrganizationUnitResponse, error)
	// PatchStorageGroup implements patchStorageGroup operation.
	//
	// Patch Storage Group.
	//
	// PATCH /storage-groups/{id}
	PatchStorageGroup(ctx context.Context, req *PatchStorageGroupRequest, params PatchStorageGroupParams) (*PatchStorageGroupResponse, error)
	// UpdateCell implements updateCell operation.
	//
	// Update Cell.
	//
	// PUT /cells-groups/{groupId}/cells/{cellId}
	UpdateCell(ctx context.Context, req *UpdateCellRequest, params UpdateCellParams) (*UpdateCellResponse, error)
	// UpdateCellsGroup implements updateCellsGroup operation.
	//
	// Update Cells Group.
	//
	// PUT /cells-groups/{groupId}
	UpdateCellsGroup(ctx context.Context, req *UpdateCellsGroupRequest, params UpdateCellsGroupParams) (*UpdateCellsGroupResponse, error)
	// UpdateItem implements updateItem operation.
	//
	// Update Item.
	//
	// PUT /items/{id}
	UpdateItem(ctx context.Context, req *UpdateItemRequest, params UpdateItemParams) (*UpdateItemResponse, error)
	// UpdateOrganization implements updateOrganization operation.
	//
	// Update Organization.
	//
	// PUT /orgs/{id}
	UpdateOrganization(ctx context.Context, req *UpdateOrganizationRequest, params UpdateOrganizationParams) (*UpdateOrganizationResponse, error)
	// UpdateOrganizationUnit implements updateOrganizationUnit operation.
	//
	// Update Organization Unit.
	//
	// PUT /units/{id}
	UpdateOrganizationUnit(ctx context.Context, req *UpdateOrganizationUnitRequest, params UpdateOrganizationUnitParams) (*UpdateOrganizationUnitResponse, error)
	// UpdateStorageGroup implements updateStorageGroup operation.
	//
	// Update Storage Group.
	//
	// PUT /storage-groups/{id}
	UpdateStorageGroup(ctx context.Context, req *UpdateStorageGroupRequest, params UpdateStorageGroupParams) (*UpdateStorageGroupResponse, error)
	// NewError creates *DefaultErrorStatusCode from error returned by handler.
	//
	// Used for common default response.
	NewError(ctx context.Context, err error) *DefaultErrorStatusCode
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
