// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"

	"github.com/google/uuid"
)

func (s *ErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// Ref: #/components/schemas/CreateOrganizationRequest
type CreateOrganizationRequest struct {
	ID        OptUUID `json:"id"`
	Name      string  `json:"name"`
	Subdomain string  `json:"subdomain"`
}

// GetID returns the value of ID.
func (s *CreateOrganizationRequest) GetID() OptUUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *CreateOrganizationRequest) GetName() string {
	return s.Name
}

// GetSubdomain returns the value of Subdomain.
func (s *CreateOrganizationRequest) GetSubdomain() string {
	return s.Subdomain
}

// SetID sets the value of ID.
func (s *CreateOrganizationRequest) SetID(val OptUUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *CreateOrganizationRequest) SetName(val string) {
	s.Name = val
}

// SetSubdomain sets the value of Subdomain.
func (s *CreateOrganizationRequest) SetSubdomain(val string) {
	s.Subdomain = val
}

// Ref: #/components/schemas/CreateOrganizationResponse
type CreateOrganizationResponse struct {
	Data Organization `json:"data"`
}

// GetData returns the value of Data.
func (s *CreateOrganizationResponse) GetData() Organization {
	return s.Data
}

// SetData sets the value of Data.
func (s *CreateOrganizationResponse) SetData(val Organization) {
	s.Data = val
}

// Ref: #/components/schemas/CreateOrganizationUnitRequest
type CreateOrganizationUnitRequest struct {
	ID      OptUUID      `json:"id"`
	Name    string       `json:"name"`
	Alias   string       `json:"alias"`
	Address OptNilString `json:"address"`
}

// GetID returns the value of ID.
func (s *CreateOrganizationUnitRequest) GetID() OptUUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *CreateOrganizationUnitRequest) GetName() string {
	return s.Name
}

// GetAlias returns the value of Alias.
func (s *CreateOrganizationUnitRequest) GetAlias() string {
	return s.Alias
}

// GetAddress returns the value of Address.
func (s *CreateOrganizationUnitRequest) GetAddress() OptNilString {
	return s.Address
}

// SetID sets the value of ID.
func (s *CreateOrganizationUnitRequest) SetID(val OptUUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *CreateOrganizationUnitRequest) SetName(val string) {
	s.Name = val
}

// SetAlias sets the value of Alias.
func (s *CreateOrganizationUnitRequest) SetAlias(val string) {
	s.Alias = val
}

// SetAddress sets the value of Address.
func (s *CreateOrganizationUnitRequest) SetAddress(val OptNilString) {
	s.Address = val
}

// Ref: #/components/schemas/CreateOrganizationUnitResponse
type CreateOrganizationUnitResponse struct {
	Data OptUnit `json:"data"`
}

// GetData returns the value of Data.
func (s *CreateOrganizationUnitResponse) GetData() OptUnit {
	return s.Data
}

// SetData sets the value of Data.
func (s *CreateOrganizationUnitResponse) SetData(val OptUnit) {
	s.Data = val
}

// DeleteOrganizationOK is response for DeleteOrganization operation.
type DeleteOrganizationOK struct{}

// DeleteOrganizationUnitOK is response for DeleteOrganizationUnit operation.
type DeleteOrganizationUnitOK struct{}

// Represents error object.
// Ref: #/components/schemas/Error
type Error struct {
	ErrorID string `json:"error_id"`
	Message string `json:"message"`
}

// GetErrorID returns the value of ErrorID.
func (s *Error) GetErrorID() string {
	return s.ErrorID
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// SetErrorID sets the value of ErrorID.
func (s *Error) SetErrorID(val string) {
	s.ErrorID = val
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

// Ref: #/components/schemas/GetOrganizationByIdResponse
type GetOrganizationByIdResponse struct {
	Data Organization `json:"data"`
}

// GetData returns the value of Data.
func (s *GetOrganizationByIdResponse) GetData() Organization {
	return s.Data
}

// SetData sets the value of Data.
func (s *GetOrganizationByIdResponse) SetData(val Organization) {
	s.Data = val
}

// Ref: #/components/schemas/GetOrganizationUnitByIdResponse
type GetOrganizationUnitByIdResponse struct {
	Data Unit `json:"data"`
}

// GetData returns the value of Data.
func (s *GetOrganizationUnitByIdResponse) GetData() Unit {
	return s.Data
}

// SetData sets the value of Data.
func (s *GetOrganizationUnitByIdResponse) SetData(val Unit) {
	s.Data = val
}

// Ref: #/components/schemas/GetOrganizationUnitsResponse
type GetOrganizationUnitsResponse struct {
	Data []Unit `json:"data"`
}

// GetData returns the value of Data.
func (s *GetOrganizationUnitsResponse) GetData() []Unit {
	return s.Data
}

// SetData sets the value of Data.
func (s *GetOrganizationUnitsResponse) SetData(val []Unit) {
	s.Data = val
}

// Ref: #/components/schemas/GetOrganizationsResponse
type GetOrganizationsResponse struct {
	Data []Organization `json:"data"`
}

// GetData returns the value of Data.
func (s *GetOrganizationsResponse) GetData() []Organization {
	return s.Data
}

// SetData sets the value of Data.
func (s *GetOrganizationsResponse) SetData(val []Organization) {
	s.Data = val
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUUID returns new OptUUID with value set to v.
func NewOptUUID(v uuid.UUID) OptUUID {
	return OptUUID{
		Value: v,
		Set:   true,
	}
}

// OptUUID is optional uuid.UUID.
type OptUUID struct {
	Value uuid.UUID
	Set   bool
}

// IsSet returns true if OptUUID was set.
func (o OptUUID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUUID) Reset() {
	var v uuid.UUID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUUID) SetTo(v uuid.UUID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUUID) Get() (v uuid.UUID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUnit returns new OptUnit with value set to v.
func NewOptUnit(v Unit) OptUnit {
	return OptUnit{
		Value: v,
		Set:   true,
	}
}

// OptUnit is optional Unit.
type OptUnit struct {
	Value Unit
	Set   bool
}

// IsSet returns true if OptUnit was set.
func (o OptUnit) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUnit) Reset() {
	var v Unit
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUnit) SetTo(v Unit) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUnit) Get() (v Unit, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUnit) Or(d Unit) Unit {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/Organization
type Organization struct {
	ID        OptUUID `json:"id"`
	Name      string  `json:"name"`
	Subdomain string  `json:"subdomain"`
}

// GetID returns the value of ID.
func (s *Organization) GetID() OptUUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *Organization) GetName() string {
	return s.Name
}

// GetSubdomain returns the value of Subdomain.
func (s *Organization) GetSubdomain() string {
	return s.Subdomain
}

// SetID sets the value of ID.
func (s *Organization) SetID(val OptUUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Organization) SetName(val string) {
	s.Name = val
}

// SetSubdomain sets the value of Subdomain.
func (s *Organization) SetSubdomain(val string) {
	s.Subdomain = val
}

// Ref: #/components/schemas/PatchOrganizationRequest
type PatchOrganizationRequest struct {
	Name      OptString `json:"name"`
	Subdomain OptString `json:"subdomain"`
}

// GetName returns the value of Name.
func (s *PatchOrganizationRequest) GetName() OptString {
	return s.Name
}

// GetSubdomain returns the value of Subdomain.
func (s *PatchOrganizationRequest) GetSubdomain() OptString {
	return s.Subdomain
}

// SetName sets the value of Name.
func (s *PatchOrganizationRequest) SetName(val OptString) {
	s.Name = val
}

// SetSubdomain sets the value of Subdomain.
func (s *PatchOrganizationRequest) SetSubdomain(val OptString) {
	s.Subdomain = val
}

// Ref: #/components/schemas/PatchOrganizationResponse
type PatchOrganizationResponse struct {
	Data []Organization `json:"data"`
}

// GetData returns the value of Data.
func (s *PatchOrganizationResponse) GetData() []Organization {
	return s.Data
}

// SetData sets the value of Data.
func (s *PatchOrganizationResponse) SetData(val []Organization) {
	s.Data = val
}

// Ref: #/components/schemas/PatchOrganizationUnitRequest
type PatchOrganizationUnitRequest struct {
	Name    OptString `json:"name"`
	Alias   OptString `json:"alias"`
	Address OptString `json:"address"`
}

// GetName returns the value of Name.
func (s *PatchOrganizationUnitRequest) GetName() OptString {
	return s.Name
}

// GetAlias returns the value of Alias.
func (s *PatchOrganizationUnitRequest) GetAlias() OptString {
	return s.Alias
}

// GetAddress returns the value of Address.
func (s *PatchOrganizationUnitRequest) GetAddress() OptString {
	return s.Address
}

// SetName sets the value of Name.
func (s *PatchOrganizationUnitRequest) SetName(val OptString) {
	s.Name = val
}

// SetAlias sets the value of Alias.
func (s *PatchOrganizationUnitRequest) SetAlias(val OptString) {
	s.Alias = val
}

// SetAddress sets the value of Address.
func (s *PatchOrganizationUnitRequest) SetAddress(val OptString) {
	s.Address = val
}

// Ref: #/components/schemas/PatchOrganizationUnitResponse
type PatchOrganizationUnitResponse struct {
	Data []Unit `json:"data"`
}

// GetData returns the value of Data.
func (s *PatchOrganizationUnitResponse) GetData() []Unit {
	return s.Data
}

// SetData sets the value of Data.
func (s *PatchOrganizationUnitResponse) SetData(val []Unit) {
	s.Data = val
}

// Ref: #/components/schemas/Unit
type Unit struct {
	ID      OptUUID      `json:"id"`
	Name    string       `json:"name"`
	Alias   string       `json:"alias"`
	Address OptNilString `json:"address"`
}

// GetID returns the value of ID.
func (s *Unit) GetID() OptUUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *Unit) GetName() string {
	return s.Name
}

// GetAlias returns the value of Alias.
func (s *Unit) GetAlias() string {
	return s.Alias
}

// GetAddress returns the value of Address.
func (s *Unit) GetAddress() OptNilString {
	return s.Address
}

// SetID sets the value of ID.
func (s *Unit) SetID(val OptUUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Unit) SetName(val string) {
	s.Name = val
}

// SetAlias sets the value of Alias.
func (s *Unit) SetAlias(val string) {
	s.Alias = val
}

// SetAddress sets the value of Address.
func (s *Unit) SetAddress(val OptNilString) {
	s.Address = val
}

// Ref: #/components/schemas/UpdateOrganizationRequest
type UpdateOrganizationRequest struct {
	ID        OptUUID `json:"id"`
	Name      string  `json:"name"`
	Subdomain string  `json:"subdomain"`
}

// GetID returns the value of ID.
func (s *UpdateOrganizationRequest) GetID() OptUUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *UpdateOrganizationRequest) GetName() string {
	return s.Name
}

// GetSubdomain returns the value of Subdomain.
func (s *UpdateOrganizationRequest) GetSubdomain() string {
	return s.Subdomain
}

// SetID sets the value of ID.
func (s *UpdateOrganizationRequest) SetID(val OptUUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UpdateOrganizationRequest) SetName(val string) {
	s.Name = val
}

// SetSubdomain sets the value of Subdomain.
func (s *UpdateOrganizationRequest) SetSubdomain(val string) {
	s.Subdomain = val
}

// Ref: #/components/schemas/UpdateOrganizationResponse
type UpdateOrganizationResponse struct {
	Data []Organization `json:"data"`
}

// GetData returns the value of Data.
func (s *UpdateOrganizationResponse) GetData() []Organization {
	return s.Data
}

// SetData sets the value of Data.
func (s *UpdateOrganizationResponse) SetData(val []Organization) {
	s.Data = val
}

// Ref: #/components/schemas/UpdateOrganizationUnitRequest
type UpdateOrganizationUnitRequest struct {
	ID      OptUUID      `json:"id"`
	Name    string       `json:"name"`
	Alias   string       `json:"alias"`
	Address OptNilString `json:"address"`
}

// GetID returns the value of ID.
func (s *UpdateOrganizationUnitRequest) GetID() OptUUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *UpdateOrganizationUnitRequest) GetName() string {
	return s.Name
}

// GetAlias returns the value of Alias.
func (s *UpdateOrganizationUnitRequest) GetAlias() string {
	return s.Alias
}

// GetAddress returns the value of Address.
func (s *UpdateOrganizationUnitRequest) GetAddress() OptNilString {
	return s.Address
}

// SetID sets the value of ID.
func (s *UpdateOrganizationUnitRequest) SetID(val OptUUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UpdateOrganizationUnitRequest) SetName(val string) {
	s.Name = val
}

// SetAlias sets the value of Alias.
func (s *UpdateOrganizationUnitRequest) SetAlias(val string) {
	s.Alias = val
}

// SetAddress sets the value of Address.
func (s *UpdateOrganizationUnitRequest) SetAddress(val OptNilString) {
	s.Address = val
}

// Ref: #/components/schemas/UpdateOrganizationUnitResponse
type UpdateOrganizationUnitResponse struct {
	Data []Unit `json:"data"`
}

// GetData returns the value of Data.
func (s *UpdateOrganizationUnitResponse) GetData() []Unit {
	return s.Data
}

// SetData sets the value of Data.
func (s *UpdateOrganizationUnitResponse) SetData(val []Unit) {
	s.Data = val
}
