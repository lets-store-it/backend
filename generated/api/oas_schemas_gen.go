// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
	"time"

	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
	"github.com/google/uuid"
)

func (s *DefaultErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

type ApiToken struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *ApiToken) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *ApiToken) SetAPIKey(val string) {
	s.APIKey = val
}

// Ref: #/components/schemas/AuditLog
type AuditLog struct {
	ID               uuid.UUID                  `json:"id"`
	Employee         Employee                   `json:"employee"`
	Action           AuditLogAction             `json:"action"`
	Time             time.Time                  `json:"time"`
	TargetObjectType AuditLogTargetObjectType   `json:"targetObjectType"`
	TargetObjectId   uuid.UUID                  `json:"targetObjectId"`
	PrechangeState   NilAuditLogPrechangeState  `json:"prechangeState"`
	PostchangeState  NilAuditLogPostchangeState `json:"postchangeState"`
}

// GetID returns the value of ID.
func (s *AuditLog) GetID() uuid.UUID {
	return s.ID
}

// GetEmployee returns the value of Employee.
func (s *AuditLog) GetEmployee() Employee {
	return s.Employee
}

// GetAction returns the value of Action.
func (s *AuditLog) GetAction() AuditLogAction {
	return s.Action
}

// GetTime returns the value of Time.
func (s *AuditLog) GetTime() time.Time {
	return s.Time
}

// GetTargetObjectType returns the value of TargetObjectType.
func (s *AuditLog) GetTargetObjectType() AuditLogTargetObjectType {
	return s.TargetObjectType
}

// GetTargetObjectId returns the value of TargetObjectId.
func (s *AuditLog) GetTargetObjectId() uuid.UUID {
	return s.TargetObjectId
}

// GetPrechangeState returns the value of PrechangeState.
func (s *AuditLog) GetPrechangeState() NilAuditLogPrechangeState {
	return s.PrechangeState
}

// GetPostchangeState returns the value of PostchangeState.
func (s *AuditLog) GetPostchangeState() NilAuditLogPostchangeState {
	return s.PostchangeState
}

// SetID sets the value of ID.
func (s *AuditLog) SetID(val uuid.UUID) {
	s.ID = val
}

// SetEmployee sets the value of Employee.
func (s *AuditLog) SetEmployee(val Employee) {
	s.Employee = val
}

// SetAction sets the value of Action.
func (s *AuditLog) SetAction(val AuditLogAction) {
	s.Action = val
}

// SetTime sets the value of Time.
func (s *AuditLog) SetTime(val time.Time) {
	s.Time = val
}

// SetTargetObjectType sets the value of TargetObjectType.
func (s *AuditLog) SetTargetObjectType(val AuditLogTargetObjectType) {
	s.TargetObjectType = val
}

// SetTargetObjectId sets the value of TargetObjectId.
func (s *AuditLog) SetTargetObjectId(val uuid.UUID) {
	s.TargetObjectId = val
}

// SetPrechangeState sets the value of PrechangeState.
func (s *AuditLog) SetPrechangeState(val NilAuditLogPrechangeState) {
	s.PrechangeState = val
}

// SetPostchangeState sets the value of PostchangeState.
func (s *AuditLog) SetPostchangeState(val NilAuditLogPostchangeState) {
	s.PostchangeState = val
}

type AuditLogAction string

const (
	AuditLogActionCreate AuditLogAction = "create"
	AuditLogActionUpdate AuditLogAction = "update"
	AuditLogActionDelete AuditLogAction = "delete"
)

// AllValues returns all AuditLogAction values.
func (AuditLogAction) AllValues() []AuditLogAction {
	return []AuditLogAction{
		AuditLogActionCreate,
		AuditLogActionUpdate,
		AuditLogActionDelete,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AuditLogAction) MarshalText() ([]byte, error) {
	switch s {
	case AuditLogActionCreate:
		return []byte(s), nil
	case AuditLogActionUpdate:
		return []byte(s), nil
	case AuditLogActionDelete:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AuditLogAction) UnmarshalText(data []byte) error {
	switch AuditLogAction(data) {
	case AuditLogActionCreate:
		*s = AuditLogActionCreate
		return nil
	case AuditLogActionUpdate:
		*s = AuditLogActionUpdate
		return nil
	case AuditLogActionDelete:
		*s = AuditLogActionDelete
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type AuditLogPostchangeState map[string]jx.Raw

func (s *AuditLogPostchangeState) init() AuditLogPostchangeState {
	m := *s
	if m == nil {
		m = map[string]jx.Raw{}
		*s = m
	}
	return m
}

type AuditLogPrechangeState map[string]jx.Raw

func (s *AuditLogPrechangeState) init() AuditLogPrechangeState {
	m := *s
	if m == nil {
		m = map[string]jx.Raw{}
		*s = m
	}
	return m
}

type AuditLogTargetObjectType struct {
	ID    int    `json:"id"`
	Group string `json:"group"`
	Name  string `json:"name"`
}

// GetID returns the value of ID.
func (s *AuditLogTargetObjectType) GetID() int {
	return s.ID
}

// GetGroup returns the value of Group.
func (s *AuditLogTargetObjectType) GetGroup() string {
	return s.Group
}

// GetName returns the value of Name.
func (s *AuditLogTargetObjectType) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *AuditLogTargetObjectType) SetID(val int) {
	s.ID = val
}

// SetGroup sets the value of Group.
func (s *AuditLogTargetObjectType) SetGroup(val string) {
	s.Group = val
}

// SetName sets the value of Name.
func (s *AuditLogTargetObjectType) SetName(val string) {
	s.Name = val
}

// Ref: #/components/responses/AuthResponse
type AuthResponse struct {
	SetCookie string
}

// GetSetCookie returns the value of SetCookie.
func (s *AuthResponse) GetSetCookie() string {
	return s.SetCookie
}

// SetSetCookie sets the value of SetCookie.
func (s *AuthResponse) SetSetCookie(val string) {
	s.SetCookie = val
}

func (*AuthResponse) exchangeYandexAccessTokenRes() {}

// Ref: #/components/schemas/CellBase
type CellBase struct {
	ID       uuid.UUID `json:"id"`
	Alias    string    `json:"alias"`
	Row      int       `json:"row"`
	Level    int       `json:"level"`
	Position int       `json:"position"`
}

// GetID returns the value of ID.
func (s *CellBase) GetID() uuid.UUID {
	return s.ID
}

// GetAlias returns the value of Alias.
func (s *CellBase) GetAlias() string {
	return s.Alias
}

// GetRow returns the value of Row.
func (s *CellBase) GetRow() int {
	return s.Row
}

// GetLevel returns the value of Level.
func (s *CellBase) GetLevel() int {
	return s.Level
}

// GetPosition returns the value of Position.
func (s *CellBase) GetPosition() int {
	return s.Position
}

// SetID sets the value of ID.
func (s *CellBase) SetID(val uuid.UUID) {
	s.ID = val
}

// SetAlias sets the value of Alias.
func (s *CellBase) SetAlias(val string) {
	s.Alias = val
}

// SetRow sets the value of Row.
func (s *CellBase) SetRow(val int) {
	s.Row = val
}

// SetLevel sets the value of Level.
func (s *CellBase) SetLevel(val int) {
	s.Level = val
}

// SetPosition sets the value of Position.
func (s *CellBase) SetPosition(val int) {
	s.Position = val
}

// Merged schema.
// Ref: #/components/schemas/CellForInstance
type CellForInstance struct {
	ID       uuid.UUID                     `json:"id"`
	Alias    string                        `json:"alias"`
	Row      int                           `json:"row"`
	Level    int                           `json:"level"`
	Position int                           `json:"position"`
	CellPath []CellForInstanceCellPathItem `json:"cellPath"`
}

// GetID returns the value of ID.
func (s *CellForInstance) GetID() uuid.UUID {
	return s.ID
}

// GetAlias returns the value of Alias.
func (s *CellForInstance) GetAlias() string {
	return s.Alias
}

// GetRow returns the value of Row.
func (s *CellForInstance) GetRow() int {
	return s.Row
}

// GetLevel returns the value of Level.
func (s *CellForInstance) GetLevel() int {
	return s.Level
}

// GetPosition returns the value of Position.
func (s *CellForInstance) GetPosition() int {
	return s.Position
}

// GetCellPath returns the value of CellPath.
func (s *CellForInstance) GetCellPath() []CellForInstanceCellPathItem {
	return s.CellPath
}

// SetID sets the value of ID.
func (s *CellForInstance) SetID(val uuid.UUID) {
	s.ID = val
}

// SetAlias sets the value of Alias.
func (s *CellForInstance) SetAlias(val string) {
	s.Alias = val
}

// SetRow sets the value of Row.
func (s *CellForInstance) SetRow(val int) {
	s.Row = val
}

// SetLevel sets the value of Level.
func (s *CellForInstance) SetLevel(val int) {
	s.Level = val
}

// SetPosition sets the value of Position.
func (s *CellForInstance) SetPosition(val int) {
	s.Position = val
}

// SetCellPath sets the value of CellPath.
func (s *CellForInstance) SetCellPath(val []CellForInstanceCellPathItem) {
	s.CellPath = val
}

type CellForInstanceCellPathItem struct {
	ID         uuid.UUID                             `json:"id"`
	Name       string                                `json:"name"`
	Alias      string                                `json:"alias"`
	ObjectType CellForInstanceCellPathItemObjectType `json:"objectType"`
}

// GetID returns the value of ID.
func (s *CellForInstanceCellPathItem) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *CellForInstanceCellPathItem) GetName() string {
	return s.Name
}

// GetAlias returns the value of Alias.
func (s *CellForInstanceCellPathItem) GetAlias() string {
	return s.Alias
}

// GetObjectType returns the value of ObjectType.
func (s *CellForInstanceCellPathItem) GetObjectType() CellForInstanceCellPathItemObjectType {
	return s.ObjectType
}

// SetID sets the value of ID.
func (s *CellForInstanceCellPathItem) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *CellForInstanceCellPathItem) SetName(val string) {
	s.Name = val
}

// SetAlias sets the value of Alias.
func (s *CellForInstanceCellPathItem) SetAlias(val string) {
	s.Alias = val
}

// SetObjectType sets the value of ObjectType.
func (s *CellForInstanceCellPathItem) SetObjectType(val CellForInstanceCellPathItemObjectType) {
	s.ObjectType = val
}

type CellForInstanceCellPathItemObjectType string

const (
	CellForInstanceCellPathItemObjectTypeCell         CellForInstanceCellPathItemObjectType = "cell"
	CellForInstanceCellPathItemObjectTypeCellsGroup   CellForInstanceCellPathItemObjectType = "cells_group"
	CellForInstanceCellPathItemObjectTypeStorageGroup CellForInstanceCellPathItemObjectType = "storage_group"
)

// AllValues returns all CellForInstanceCellPathItemObjectType values.
func (CellForInstanceCellPathItemObjectType) AllValues() []CellForInstanceCellPathItemObjectType {
	return []CellForInstanceCellPathItemObjectType{
		CellForInstanceCellPathItemObjectTypeCell,
		CellForInstanceCellPathItemObjectTypeCellsGroup,
		CellForInstanceCellPathItemObjectTypeStorageGroup,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CellForInstanceCellPathItemObjectType) MarshalText() ([]byte, error) {
	switch s {
	case CellForInstanceCellPathItemObjectTypeCell:
		return []byte(s), nil
	case CellForInstanceCellPathItemObjectTypeCellsGroup:
		return []byte(s), nil
	case CellForInstanceCellPathItemObjectTypeStorageGroup:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CellForInstanceCellPathItemObjectType) UnmarshalText(data []byte) error {
	switch CellForInstanceCellPathItemObjectType(data) {
	case CellForInstanceCellPathItemObjectTypeCell:
		*s = CellForInstanceCellPathItemObjectTypeCell
		return nil
	case CellForInstanceCellPathItemObjectTypeCellsGroup:
		*s = CellForInstanceCellPathItemObjectTypeCellsGroup
		return nil
	case CellForInstanceCellPathItemObjectTypeStorageGroup:
		*s = CellForInstanceCellPathItemObjectTypeStorageGroup
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Merged schema.
// Ref: #/components/schemas/CellGroup
type CellGroup struct {
	ID    uuid.UUID    `json:"id"`
	Name  string       `json:"name"`
	Alias StorageAlias `json:"alias"`
	// Merged property.
	StorageGroupId NilUUID `json:"storageGroupId"`
	// Merged property.
	UnitId uuid.UUID `json:"unitId"`
}

// GetID returns the value of ID.
func (s *CellGroup) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *CellGroup) GetName() string {
	return s.Name
}

// GetAlias returns the value of Alias.
func (s *CellGroup) GetAlias() StorageAlias {
	return s.Alias
}

// GetStorageGroupId returns the value of StorageGroupId.
func (s *CellGroup) GetStorageGroupId() NilUUID {
	return s.StorageGroupId
}

// GetUnitId returns the value of UnitId.
func (s *CellGroup) GetUnitId() uuid.UUID {
	return s.UnitId
}

// SetID sets the value of ID.
func (s *CellGroup) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *CellGroup) SetName(val string) {
	s.Name = val
}

// SetAlias sets the value of Alias.
func (s *CellGroup) SetAlias(val StorageAlias) {
	s.Alias = val
}

// SetStorageGroupId sets the value of StorageGroupId.
func (s *CellGroup) SetStorageGroupId(val NilUUID) {
	s.StorageGroupId = val
}

// SetUnitId sets the value of UnitId.
func (s *CellGroup) SetUnitId(val uuid.UUID) {
	s.UnitId = val
}

type Cookie struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *Cookie) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *Cookie) SetAPIKey(val string) {
	s.APIKey = val
}

type CreateApiTokenForbidden ErrorContent

func (*CreateApiTokenForbidden) createApiTokenRes() {}

// Ref: #/components/schemas/CreateApiTokenRequest
type CreateApiTokenRequest struct {
	// The name of the token.
	Name string `json:"name"`
}

// GetName returns the value of Name.
func (s *CreateApiTokenRequest) GetName() string {
	return s.Name
}

// SetName sets the value of Name.
func (s *CreateApiTokenRequest) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/CreateApiTokenResponse
type CreateApiTokenResponse struct {
	Data Token `json:"data"`
}

// GetData returns the value of Data.
func (s *CreateApiTokenResponse) GetData() Token {
	return s.Data
}

// SetData sets the value of Data.
func (s *CreateApiTokenResponse) SetData(val Token) {
	s.Data = val
}

func (*CreateApiTokenResponse) createApiTokenRes() {}

type CreateApiTokenUnauthorized ErrorContent

func (*CreateApiTokenUnauthorized) createApiTokenRes() {}

type CreateCellForbidden ErrorContent

func (*CreateCellForbidden) createCellRes() {}

// Ref: #/components/schemas/CreateCellRequest
type CreateCellRequest struct {
	ID       uuid.UUID `json:"id"`
	Alias    string    `json:"alias"`
	Row      int       `json:"row"`
	Level    int       `json:"level"`
	Position int       `json:"position"`
}

// GetID returns the value of ID.
func (s *CreateCellRequest) GetID() uuid.UUID {
	return s.ID
}

// GetAlias returns the value of Alias.
func (s *CreateCellRequest) GetAlias() string {
	return s.Alias
}

// GetRow returns the value of Row.
func (s *CreateCellRequest) GetRow() int {
	return s.Row
}

// GetLevel returns the value of Level.
func (s *CreateCellRequest) GetLevel() int {
	return s.Level
}

// GetPosition returns the value of Position.
func (s *CreateCellRequest) GetPosition() int {
	return s.Position
}

// SetID sets the value of ID.
func (s *CreateCellRequest) SetID(val uuid.UUID) {
	s.ID = val
}

// SetAlias sets the value of Alias.
func (s *CreateCellRequest) SetAlias(val string) {
	s.Alias = val
}

// SetRow sets the value of Row.
func (s *CreateCellRequest) SetRow(val int) {
	s.Row = val
}

// SetLevel sets the value of Level.
func (s *CreateCellRequest) SetLevel(val int) {
	s.Level = val
}

// SetPosition sets the value of Position.
func (s *CreateCellRequest) SetPosition(val int) {
	s.Position = val
}

// Ref: #/components/schemas/CreateCellResponse
type CreateCellResponse struct {
	Data CellBase `json:"data"`
}

// GetData returns the value of Data.
func (s *CreateCellResponse) GetData() CellBase {
	return s.Data
}

// SetData sets the value of Data.
func (s *CreateCellResponse) SetData(val CellBase) {
	s.Data = val
}

func (*CreateCellResponse) createCellRes() {}

type CreateCellUnauthorized ErrorContent

func (*CreateCellUnauthorized) createCellRes() {}

type CreateCellsGroupForbidden ErrorContent

func (*CreateCellsGroupForbidden) createCellsGroupRes() {}

// Ref: #/components/schemas/CreateCellsGroupRequest
type CreateCellsGroupRequest struct {
	Name           string       `json:"name"`
	Alias          StorageAlias `json:"alias"`
	StorageGroupId OptNilUUID   `json:"storageGroupId"`
	UnitId         uuid.UUID    `json:"unitId"`
}

// GetName returns the value of Name.
func (s *CreateCellsGroupRequest) GetName() string {
	return s.Name
}

// GetAlias returns the value of Alias.
func (s *CreateCellsGroupRequest) GetAlias() StorageAlias {
	return s.Alias
}

// GetStorageGroupId returns the value of StorageGroupId.
func (s *CreateCellsGroupRequest) GetStorageGroupId() OptNilUUID {
	return s.StorageGroupId
}

// GetUnitId returns the value of UnitId.
func (s *CreateCellsGroupRequest) GetUnitId() uuid.UUID {
	return s.UnitId
}

// SetName sets the value of Name.
func (s *CreateCellsGroupRequest) SetName(val string) {
	s.Name = val
}

// SetAlias sets the value of Alias.
func (s *CreateCellsGroupRequest) SetAlias(val StorageAlias) {
	s.Alias = val
}

// SetStorageGroupId sets the value of StorageGroupId.
func (s *CreateCellsGroupRequest) SetStorageGroupId(val OptNilUUID) {
	s.StorageGroupId = val
}

// SetUnitId sets the value of UnitId.
func (s *CreateCellsGroupRequest) SetUnitId(val uuid.UUID) {
	s.UnitId = val
}

// Ref: #/components/schemas/CreateCellsGroupResponse
type CreateCellsGroupResponse struct {
	Data CellGroup `json:"data"`
}

// GetData returns the value of Data.
func (s *CreateCellsGroupResponse) GetData() CellGroup {
	return s.Data
}

// SetData sets the value of Data.
func (s *CreateCellsGroupResponse) SetData(val CellGroup) {
	s.Data = val
}

func (*CreateCellsGroupResponse) createCellsGroupRes() {}

type CreateCellsGroupUnauthorized ErrorContent

func (*CreateCellsGroupUnauthorized) createCellsGroupRes() {}

type CreateInstanceForItemForbidden ErrorContent

func (*CreateInstanceForItemForbidden) createInstanceForItemRes() {}

// Ref: #/components/schemas/CreateInstanceForItemRequest
type CreateInstanceForItemRequest struct {
	VariantId uuid.UUID  `json:"variantId"`
	CellId    OptNilUUID `json:"cellId"`
}

// GetVariantId returns the value of VariantId.
func (s *CreateInstanceForItemRequest) GetVariantId() uuid.UUID {
	return s.VariantId
}

// GetCellId returns the value of CellId.
func (s *CreateInstanceForItemRequest) GetCellId() OptNilUUID {
	return s.CellId
}

// SetVariantId sets the value of VariantId.
func (s *CreateInstanceForItemRequest) SetVariantId(val uuid.UUID) {
	s.VariantId = val
}

// SetCellId sets the value of CellId.
func (s *CreateInstanceForItemRequest) SetCellId(val OptNilUUID) {
	s.CellId = val
}

// Ref: #/components/schemas/CreateInstanceForItemResponse
type CreateInstanceForItemResponse struct {
	Data []CreateInstanceForItemResponseDataItem `json:"data"`
}

// GetData returns the value of Data.
func (s *CreateInstanceForItemResponse) GetData() []CreateInstanceForItemResponseDataItem {
	return s.Data
}

// SetData sets the value of Data.
func (s *CreateInstanceForItemResponse) SetData(val []CreateInstanceForItemResponseDataItem) {
	s.Data = val
}

func (*CreateInstanceForItemResponse) createInstanceForItemRes() {}

type CreateInstanceForItemResponseDataItem struct {
	ID      uuid.UUID                                   `json:"id"`
	Status  CreateInstanceForItemResponseDataItemStatus `json:"status"`
	Variant ItemVariant                                 `json:"variant"`
	Cell    CellForInstance                             `json:"cell"`
}

// GetID returns the value of ID.
func (s *CreateInstanceForItemResponseDataItem) GetID() uuid.UUID {
	return s.ID
}

// GetStatus returns the value of Status.
func (s *CreateInstanceForItemResponseDataItem) GetStatus() CreateInstanceForItemResponseDataItemStatus {
	return s.Status
}

// GetVariant returns the value of Variant.
func (s *CreateInstanceForItemResponseDataItem) GetVariant() ItemVariant {
	return s.Variant
}

// GetCell returns the value of Cell.
func (s *CreateInstanceForItemResponseDataItem) GetCell() CellForInstance {
	return s.Cell
}

// SetID sets the value of ID.
func (s *CreateInstanceForItemResponseDataItem) SetID(val uuid.UUID) {
	s.ID = val
}

// SetStatus sets the value of Status.
func (s *CreateInstanceForItemResponseDataItem) SetStatus(val CreateInstanceForItemResponseDataItemStatus) {
	s.Status = val
}

// SetVariant sets the value of Variant.
func (s *CreateInstanceForItemResponseDataItem) SetVariant(val ItemVariant) {
	s.Variant = val
}

// SetCell sets the value of Cell.
func (s *CreateInstanceForItemResponseDataItem) SetCell(val CellForInstance) {
	s.Cell = val
}

type CreateInstanceForItemResponseDataItemStatus string

const (
	CreateInstanceForItemResponseDataItemStatusAvailable CreateInstanceForItemResponseDataItemStatus = "available"
	CreateInstanceForItemResponseDataItemStatusReserved  CreateInstanceForItemResponseDataItemStatus = "reserved"
	CreateInstanceForItemResponseDataItemStatusConsumed  CreateInstanceForItemResponseDataItemStatus = "consumed"
)

// AllValues returns all CreateInstanceForItemResponseDataItemStatus values.
func (CreateInstanceForItemResponseDataItemStatus) AllValues() []CreateInstanceForItemResponseDataItemStatus {
	return []CreateInstanceForItemResponseDataItemStatus{
		CreateInstanceForItemResponseDataItemStatusAvailable,
		CreateInstanceForItemResponseDataItemStatusReserved,
		CreateInstanceForItemResponseDataItemStatusConsumed,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreateInstanceForItemResponseDataItemStatus) MarshalText() ([]byte, error) {
	switch s {
	case CreateInstanceForItemResponseDataItemStatusAvailable:
		return []byte(s), nil
	case CreateInstanceForItemResponseDataItemStatusReserved:
		return []byte(s), nil
	case CreateInstanceForItemResponseDataItemStatusConsumed:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateInstanceForItemResponseDataItemStatus) UnmarshalText(data []byte) error {
	switch CreateInstanceForItemResponseDataItemStatus(data) {
	case CreateInstanceForItemResponseDataItemStatusAvailable:
		*s = CreateInstanceForItemResponseDataItemStatusAvailable
		return nil
	case CreateInstanceForItemResponseDataItemStatusReserved:
		*s = CreateInstanceForItemResponseDataItemStatusReserved
		return nil
	case CreateInstanceForItemResponseDataItemStatusConsumed:
		*s = CreateInstanceForItemResponseDataItemStatusConsumed
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type CreateInstanceForItemUnauthorized ErrorContent

func (*CreateInstanceForItemUnauthorized) createInstanceForItemRes() {}

type CreateItemForbidden ErrorContent

func (*CreateItemForbidden) createItemRes() {}

// Ref: #/components/schemas/CreateItemRequest
type CreateItemRequest struct {
	ID          OptUUID      `json:"id"`
	Name        string       `json:"name"`
	Description OptNilString `json:"description"`
}

// GetID returns the value of ID.
func (s *CreateItemRequest) GetID() OptUUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *CreateItemRequest) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *CreateItemRequest) GetDescription() OptNilString {
	return s.Description
}

// SetID sets the value of ID.
func (s *CreateItemRequest) SetID(val OptUUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *CreateItemRequest) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *CreateItemRequest) SetDescription(val OptNilString) {
	s.Description = val
}

// Ref: #/components/schemas/CreateItemResponse
type CreateItemResponse struct {
	Data ItemFull `json:"data"`
}

// GetData returns the value of Data.
func (s *CreateItemResponse) GetData() ItemFull {
	return s.Data
}

// SetData sets the value of Data.
func (s *CreateItemResponse) SetData(val ItemFull) {
	s.Data = val
}

func (*CreateItemResponse) createItemRes() {}

type CreateItemUnauthorized ErrorContent

func (*CreateItemUnauthorized) createItemRes() {}

type CreateItemVariantForbidden ErrorContent

func (*CreateItemVariantForbidden) createItemVariantRes() {}

// Ref: #/components/schemas/CreateItemVariantRequest
type CreateItemVariantRequest struct {
	Name    string       `json:"name"`
	Article OptNilString `json:"article"`
	Ean13   OptNilInt32  `json:"ean13"`
}

// GetName returns the value of Name.
func (s *CreateItemVariantRequest) GetName() string {
	return s.Name
}

// GetArticle returns the value of Article.
func (s *CreateItemVariantRequest) GetArticle() OptNilString {
	return s.Article
}

// GetEan13 returns the value of Ean13.
func (s *CreateItemVariantRequest) GetEan13() OptNilInt32 {
	return s.Ean13
}

// SetName sets the value of Name.
func (s *CreateItemVariantRequest) SetName(val string) {
	s.Name = val
}

// SetArticle sets the value of Article.
func (s *CreateItemVariantRequest) SetArticle(val OptNilString) {
	s.Article = val
}

// SetEan13 sets the value of Ean13.
func (s *CreateItemVariantRequest) SetEan13(val OptNilInt32) {
	s.Ean13 = val
}

// Ref: #/components/schemas/CreateItemVariantResponse
type CreateItemVariantResponse struct {
	Data ItemVariant `json:"data"`
}

// GetData returns the value of Data.
func (s *CreateItemVariantResponse) GetData() ItemVariant {
	return s.Data
}

// SetData sets the value of Data.
func (s *CreateItemVariantResponse) SetData(val ItemVariant) {
	s.Data = val
}

func (*CreateItemVariantResponse) createItemVariantRes() {}

type CreateItemVariantUnauthorized ErrorContent

func (*CreateItemVariantUnauthorized) createItemVariantRes() {}

type CreateOrganizationConflict ErrorContent

func (*CreateOrganizationConflict) createOrganizationRes() {}

// Ref: #/components/schemas/CreateOrganizationRequest
type CreateOrganizationRequest struct {
	Name      string `json:"name"`
	Subdomain string `json:"subdomain"`
}

// GetName returns the value of Name.
func (s *CreateOrganizationRequest) GetName() string {
	return s.Name
}

// GetSubdomain returns the value of Subdomain.
func (s *CreateOrganizationRequest) GetSubdomain() string {
	return s.Subdomain
}

// SetName sets the value of Name.
func (s *CreateOrganizationRequest) SetName(val string) {
	s.Name = val
}

// SetSubdomain sets the value of Subdomain.
func (s *CreateOrganizationRequest) SetSubdomain(val string) {
	s.Subdomain = val
}

// Ref: #/components/schemas/CreateOrganizationResponse
type CreateOrganizationResponse struct {
	Data Organization `json:"data"`
}

// GetData returns the value of Data.
func (s *CreateOrganizationResponse) GetData() Organization {
	return s.Data
}

// SetData sets the value of Data.
func (s *CreateOrganizationResponse) SetData(val Organization) {
	s.Data = val
}

func (*CreateOrganizationResponse) createOrganizationRes() {}

type CreateOrganizationUnauthorized ErrorContent

func (*CreateOrganizationUnauthorized) createOrganizationRes() {}

// Ref: #/components/schemas/CreateOrganizationUnitRequest
type CreateOrganizationUnitRequest struct {
	Name    string       `json:"name"`
	Alias   StorageAlias `json:"alias"`
	Address OptNilString `json:"address"`
}

// GetName returns the value of Name.
func (s *CreateOrganizationUnitRequest) GetName() string {
	return s.Name
}

// GetAlias returns the value of Alias.
func (s *CreateOrganizationUnitRequest) GetAlias() StorageAlias {
	return s.Alias
}

// GetAddress returns the value of Address.
func (s *CreateOrganizationUnitRequest) GetAddress() OptNilString {
	return s.Address
}

// SetName sets the value of Name.
func (s *CreateOrganizationUnitRequest) SetName(val string) {
	s.Name = val
}

// SetAlias sets the value of Alias.
func (s *CreateOrganizationUnitRequest) SetAlias(val StorageAlias) {
	s.Alias = val
}

// SetAddress sets the value of Address.
func (s *CreateOrganizationUnitRequest) SetAddress(val OptNilString) {
	s.Address = val
}

// Ref: #/components/schemas/CreateOrganizationUnitResponse
type CreateOrganizationUnitResponse struct {
	Data Unit `json:"data"`
}

// GetData returns the value of Data.
func (s *CreateOrganizationUnitResponse) GetData() Unit {
	return s.Data
}

// SetData sets the value of Data.
func (s *CreateOrganizationUnitResponse) SetData(val Unit) {
	s.Data = val
}

func (*CreateOrganizationUnitResponse) createUnitRes() {}

type CreateStorageGroupForbidden ErrorContent

func (*CreateStorageGroupForbidden) createStorageGroupRes() {}

// Ref: #/components/schemas/CreateStorageGroupRequest
type CreateStorageGroupRequest struct {
	ParentId OptNilUUID   `json:"parentId"`
	Name     string       `json:"name"`
	Alias    StorageAlias `json:"alias"`
	UnitId   uuid.UUID    `json:"unitId"`
}

// GetParentId returns the value of ParentId.
func (s *CreateStorageGroupRequest) GetParentId() OptNilUUID {
	return s.ParentId
}

// GetName returns the value of Name.
func (s *CreateStorageGroupRequest) GetName() string {
	return s.Name
}

// GetAlias returns the value of Alias.
func (s *CreateStorageGroupRequest) GetAlias() StorageAlias {
	return s.Alias
}

// GetUnitId returns the value of UnitId.
func (s *CreateStorageGroupRequest) GetUnitId() uuid.UUID {
	return s.UnitId
}

// SetParentId sets the value of ParentId.
func (s *CreateStorageGroupRequest) SetParentId(val OptNilUUID) {
	s.ParentId = val
}

// SetName sets the value of Name.
func (s *CreateStorageGroupRequest) SetName(val string) {
	s.Name = val
}

// SetAlias sets the value of Alias.
func (s *CreateStorageGroupRequest) SetAlias(val StorageAlias) {
	s.Alias = val
}

// SetUnitId sets the value of UnitId.
func (s *CreateStorageGroupRequest) SetUnitId(val uuid.UUID) {
	s.UnitId = val
}

// Ref: #/components/schemas/CreateStorageGroupResponse
type CreateStorageGroupResponse struct {
	Data StorageGroup `json:"data"`
}

// GetData returns the value of Data.
func (s *CreateStorageGroupResponse) GetData() StorageGroup {
	return s.Data
}

// SetData sets the value of Data.
func (s *CreateStorageGroupResponse) SetData(val StorageGroup) {
	s.Data = val
}

func (*CreateStorageGroupResponse) createStorageGroupRes() {}

type CreateStorageGroupUnauthorized ErrorContent

func (*CreateStorageGroupUnauthorized) createStorageGroupRes() {}

type CreateUnitForbidden ErrorContent

func (*CreateUnitForbidden) createUnitRes() {}

type CreateUnitUnauthorized ErrorContent

func (*CreateUnitUnauthorized) createUnitRes() {}

// DefaultErrorStatusCode wraps ErrorContent with StatusCode.
type DefaultErrorStatusCode struct {
	StatusCode int
	Response   ErrorContent
}

// GetStatusCode returns the value of StatusCode.
func (s *DefaultErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *DefaultErrorStatusCode) GetResponse() ErrorContent {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *DefaultErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *DefaultErrorStatusCode) SetResponse(val ErrorContent) {
	s.Response = val
}

// DeleteCellOK is response for DeleteCell operation.
type DeleteCellOK struct{}

type DeleteCellsGroupForbidden ErrorContent

func (*DeleteCellsGroupForbidden) deleteCellsGroupRes() {}

// DeleteCellsGroupNoContent is response for DeleteCellsGroup operation.
type DeleteCellsGroupNoContent struct{}

func (*DeleteCellsGroupNoContent) deleteCellsGroupRes() {}

type DeleteCellsGroupUnauthorized ErrorContent

func (*DeleteCellsGroupUnauthorized) deleteCellsGroupRes() {}

type DeleteEmployeeByIdForbidden ErrorContent

func (*DeleteEmployeeByIdForbidden) deleteEmployeeByIdRes() {}

// DeleteEmployeeByIdOK is response for DeleteEmployeeById operation.
type DeleteEmployeeByIdOK struct{}

func (*DeleteEmployeeByIdOK) deleteEmployeeByIdRes() {}

type DeleteEmployeeByIdUnauthorized ErrorContent

func (*DeleteEmployeeByIdUnauthorized) deleteEmployeeByIdRes() {}

type DeleteInstanceByIdForbidden ErrorContent

func (*DeleteInstanceByIdForbidden) deleteInstanceByIdRes() {}

// DeleteInstanceByIdOK is response for DeleteInstanceById operation.
type DeleteInstanceByIdOK struct{}

func (*DeleteInstanceByIdOK) deleteInstanceByIdRes() {}

type DeleteInstanceByIdUnauthorized ErrorContent

func (*DeleteInstanceByIdUnauthorized) deleteInstanceByIdRes() {}

type DeleteItemForbidden ErrorContent

func (*DeleteItemForbidden) deleteItemRes() {}

// DeleteItemNoContent is response for DeleteItem operation.
type DeleteItemNoContent struct{}

func (*DeleteItemNoContent) deleteItemRes() {}

type DeleteItemUnauthorized ErrorContent

func (*DeleteItemUnauthorized) deleteItemRes() {}

type DeleteItemVariantForbidden ErrorContent

func (*DeleteItemVariantForbidden) deleteItemVariantRes() {}

// DeleteItemVariantNoContent is response for DeleteItemVariant operation.
type DeleteItemVariantNoContent struct{}

func (*DeleteItemVariantNoContent) deleteItemVariantRes() {}

type DeleteItemVariantUnauthorized ErrorContent

func (*DeleteItemVariantUnauthorized) deleteItemVariantRes() {}

type DeleteOrganizationForbidden ErrorContent

func (*DeleteOrganizationForbidden) deleteOrganizationRes() {}

// DeleteOrganizationNoContent is response for DeleteOrganization operation.
type DeleteOrganizationNoContent struct{}

func (*DeleteOrganizationNoContent) deleteOrganizationRes() {}

type DeleteOrganizationUnauthorized ErrorContent

func (*DeleteOrganizationUnauthorized) deleteOrganizationRes() {}

type DeleteOrganizationUnitForbidden ErrorContent

func (*DeleteOrganizationUnitForbidden) deleteOrganizationUnitRes() {}

// DeleteOrganizationUnitNoContent is response for DeleteOrganizationUnit operation.
type DeleteOrganizationUnitNoContent struct{}

func (*DeleteOrganizationUnitNoContent) deleteOrganizationUnitRes() {}

type DeleteOrganizationUnitUnauthorized ErrorContent

func (*DeleteOrganizationUnitUnauthorized) deleteOrganizationUnitRes() {}

type DeleteStorageGroupForbidden ErrorContent

func (*DeleteStorageGroupForbidden) deleteStorageGroupRes() {}

// DeleteStorageGroupNoContent is response for DeleteStorageGroup operation.
type DeleteStorageGroupNoContent struct{}

func (*DeleteStorageGroupNoContent) deleteStorageGroupRes() {}

type DeleteStorageGroupUnauthorized ErrorContent

func (*DeleteStorageGroupUnauthorized) deleteStorageGroupRes() {}

// Ref: #/components/schemas/Employee
type Employee struct {
	UserId     uuid.UUID `json:"userId"`
	FirstName  string    `json:"firstName"`
	LastName   string    `json:"lastName"`
	MiddleName NilString `json:"middleName"`
	Email      string    `json:"email"`
	Role       Role      `json:"role"`
}

// GetUserId returns the value of UserId.
func (s *Employee) GetUserId() uuid.UUID {
	return s.UserId
}

// GetFirstName returns the value of FirstName.
func (s *Employee) GetFirstName() string {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *Employee) GetLastName() string {
	return s.LastName
}

// GetMiddleName returns the value of MiddleName.
func (s *Employee) GetMiddleName() NilString {
	return s.MiddleName
}

// GetEmail returns the value of Email.
func (s *Employee) GetEmail() string {
	return s.Email
}

// GetRole returns the value of Role.
func (s *Employee) GetRole() Role {
	return s.Role
}

// SetUserId sets the value of UserId.
func (s *Employee) SetUserId(val uuid.UUID) {
	s.UserId = val
}

// SetFirstName sets the value of FirstName.
func (s *Employee) SetFirstName(val string) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *Employee) SetLastName(val string) {
	s.LastName = val
}

// SetMiddleName sets the value of MiddleName.
func (s *Employee) SetMiddleName(val NilString) {
	s.MiddleName = val
}

// SetEmail sets the value of Email.
func (s *Employee) SetEmail(val string) {
	s.Email = val
}

// SetRole sets the value of Role.
func (s *Employee) SetRole(val Role) {
	s.Role = val
}

// Ref: #/components/schemas/ErrorContent
type ErrorContent struct {
	Error ErrorContentError `json:"error"`
}

// GetError returns the value of Error.
func (s *ErrorContent) GetError() ErrorContentError {
	return s.Error
}

// SetError sets the value of Error.
func (s *ErrorContent) SetError(val ErrorContentError) {
	s.Error = val
}

func (*ErrorContent) exchangeYandexAccessTokenRes() {}
func (*ErrorContent) getCurrentUserRes()            {}
func (*ErrorContent) getOrganizationsRes()          {}
func (*ErrorContent) getRolesRes()                  {}
func (*ErrorContent) logoutRes()                    {}
func (*ErrorContent) patchCurrentUserRes()          {}
func (*ErrorContent) putCurrentUserRes()            {}
func (*ErrorContent) updateItemRes()                {}

type ErrorContentError struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *ErrorContentError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *ErrorContentError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *ErrorContentError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *ErrorContentError) SetMessage(val string) {
	s.Message = val
}

type ExchangeYandexAccessTokenReq struct {
	// Yandex Access token received from Yandex OAuth on Frontend.
	AccessToken string `json:"access_token"`
}

// GetAccessToken returns the value of AccessToken.
func (s *ExchangeYandexAccessTokenReq) GetAccessToken() string {
	return s.AccessToken
}

// SetAccessToken sets the value of AccessToken.
func (s *ExchangeYandexAccessTokenReq) SetAccessToken(val string) {
	s.AccessToken = val
}

type GetApiTokensForbidden ErrorContent

func (*GetApiTokensForbidden) getApiTokensRes() {}

// Ref: #/components/schemas/GetApiTokensResponse
type GetApiTokensResponse struct {
	Data []Token `json:"data"`
}

// GetData returns the value of Data.
func (s *GetApiTokensResponse) GetData() []Token {
	return s.Data
}

// SetData sets the value of Data.
func (s *GetApiTokensResponse) SetData(val []Token) {
	s.Data = val
}

func (*GetApiTokensResponse) getApiTokensRes() {}

type GetApiTokensUnauthorized ErrorContent

func (*GetApiTokensUnauthorized) getApiTokensRes() {}

type GetAuditLogsForbidden ErrorContent

func (*GetAuditLogsForbidden) getAuditLogsRes() {}

// Ref: #/components/schemas/GetAuditLogsResponse
type GetAuditLogsResponse struct {
	Data []AuditLog `json:"data"`
}

// GetData returns the value of Data.
func (s *GetAuditLogsResponse) GetData() []AuditLog {
	return s.Data
}

// SetData sets the value of Data.
func (s *GetAuditLogsResponse) SetData(val []AuditLog) {
	s.Data = val
}

func (*GetAuditLogsResponse) getAuditLogsRes() {}

type GetAuditLogsUnauthorized ErrorContent

func (*GetAuditLogsUnauthorized) getAuditLogsRes() {}

// Ref: #/components/schemas/GetCellByIdResponse
type GetCellByIdResponse struct {
	ID       uuid.UUID `json:"id"`
	Alias    string    `json:"alias"`
	Row      int       `json:"row"`
	Level    int       `json:"level"`
	Position int       `json:"position"`
}

// GetID returns the value of ID.
func (s *GetCellByIdResponse) GetID() uuid.UUID {
	return s.ID
}

// GetAlias returns the value of Alias.
func (s *GetCellByIdResponse) GetAlias() string {
	return s.Alias
}

// GetRow returns the value of Row.
func (s *GetCellByIdResponse) GetRow() int {
	return s.Row
}

// GetLevel returns the value of Level.
func (s *GetCellByIdResponse) GetLevel() int {
	return s.Level
}

// GetPosition returns the value of Position.
func (s *GetCellByIdResponse) GetPosition() int {
	return s.Position
}

// SetID sets the value of ID.
func (s *GetCellByIdResponse) SetID(val uuid.UUID) {
	s.ID = val
}

// SetAlias sets the value of Alias.
func (s *GetCellByIdResponse) SetAlias(val string) {
	s.Alias = val
}

// SetRow sets the value of Row.
func (s *GetCellByIdResponse) SetRow(val int) {
	s.Row = val
}

// SetLevel sets the value of Level.
func (s *GetCellByIdResponse) SetLevel(val int) {
	s.Level = val
}

// SetPosition sets the value of Position.
func (s *GetCellByIdResponse) SetPosition(val int) {
	s.Position = val
}

type GetCellsForbidden ErrorContent

func (*GetCellsForbidden) getCellsRes() {}

type GetCellsGroupByIdForbidden ErrorContent

func (*GetCellsGroupByIdForbidden) getCellsGroupByIdRes() {}

// Ref: #/components/schemas/GetCellsGroupByIdResponse
type GetCellsGroupByIdResponse struct {
	Data CellGroup `json:"data"`
}

// GetData returns the value of Data.
func (s *GetCellsGroupByIdResponse) GetData() CellGroup {
	return s.Data
}

// SetData sets the value of Data.
func (s *GetCellsGroupByIdResponse) SetData(val CellGroup) {
	s.Data = val
}

func (*GetCellsGroupByIdResponse) getCellsGroupByIdRes() {}

type GetCellsGroupByIdUnauthorized ErrorContent

func (*GetCellsGroupByIdUnauthorized) getCellsGroupByIdRes() {}

type GetCellsGroupsForbidden ErrorContent

func (*GetCellsGroupsForbidden) getCellsGroupsRes() {}

// Ref: #/components/schemas/GetCellsGroupsResponse
type GetCellsGroupsResponse struct {
	Data []CellGroup `json:"data"`
}

// GetData returns the value of Data.
func (s *GetCellsGroupsResponse) GetData() []CellGroup {
	return s.Data
}

// SetData sets the value of Data.
func (s *GetCellsGroupsResponse) SetData(val []CellGroup) {
	s.Data = val
}

func (*GetCellsGroupsResponse) getCellsGroupsRes() {}

type GetCellsGroupsUnauthorized ErrorContent

func (*GetCellsGroupsUnauthorized) getCellsGroupsRes() {}

// Ref: #/components/schemas/GetCellsResponse
type GetCellsResponse struct {
	Data []CellBase `json:"data"`
}

// GetData returns the value of Data.
func (s *GetCellsResponse) GetData() []CellBase {
	return s.Data
}

// SetData sets the value of Data.
func (s *GetCellsResponse) SetData(val []CellBase) {
	s.Data = val
}

func (*GetCellsResponse) getCellsRes() {}

type GetCellsUnauthorized ErrorContent

func (*GetCellsUnauthorized) getCellsRes() {}

// Ref: #/components/schemas/GetCurrentUserResponse
type GetCurrentUserResponse struct {
	ID         uuid.UUID `json:"id"`
	FirstName  string    `json:"first_name"`
	LastName   string    `json:"last_name"`
	MiddleName NilString `json:"middle_name"`
	Email      string    `json:"email"`
}

// GetID returns the value of ID.
func (s *GetCurrentUserResponse) GetID() uuid.UUID {
	return s.ID
}

// GetFirstName returns the value of FirstName.
func (s *GetCurrentUserResponse) GetFirstName() string {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *GetCurrentUserResponse) GetLastName() string {
	return s.LastName
}

// GetMiddleName returns the value of MiddleName.
func (s *GetCurrentUserResponse) GetMiddleName() NilString {
	return s.MiddleName
}

// GetEmail returns the value of Email.
func (s *GetCurrentUserResponse) GetEmail() string {
	return s.Email
}

// SetID sets the value of ID.
func (s *GetCurrentUserResponse) SetID(val uuid.UUID) {
	s.ID = val
}

// SetFirstName sets the value of FirstName.
func (s *GetCurrentUserResponse) SetFirstName(val string) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *GetCurrentUserResponse) SetLastName(val string) {
	s.LastName = val
}

// SetMiddleName sets the value of MiddleName.
func (s *GetCurrentUserResponse) SetMiddleName(val NilString) {
	s.MiddleName = val
}

// SetEmail sets the value of Email.
func (s *GetCurrentUserResponse) SetEmail(val string) {
	s.Email = val
}

func (*GetCurrentUserResponse) getCurrentUserRes()   {}
func (*GetCurrentUserResponse) patchCurrentUserRes() {}
func (*GetCurrentUserResponse) putCurrentUserRes()   {}

type GetEmployeeByIdForbidden ErrorContent

func (*GetEmployeeByIdForbidden) getEmployeeByIdRes() {}

type GetEmployeeByIdUnauthorized ErrorContent

func (*GetEmployeeByIdUnauthorized) getEmployeeByIdRes() {}

// Ref: #/components/schemas/GetEmployeeResponse
type GetEmployeeResponse struct {
	Data Employee `json:"data"`
}

// GetData returns the value of Data.
func (s *GetEmployeeResponse) GetData() Employee {
	return s.Data
}

// SetData sets the value of Data.
func (s *GetEmployeeResponse) SetData(val Employee) {
	s.Data = val
}

func (*GetEmployeeResponse) getEmployeeByIdRes()   {}
func (*GetEmployeeResponse) inviteEmployeeRes()    {}
func (*GetEmployeeResponse) patchEmployeeByIdRes() {}

type GetEmployeesForbidden ErrorContent

func (*GetEmployeesForbidden) getEmployeesRes() {}

// Ref: #/components/schemas/GetEmployeesResponse
type GetEmployeesResponse struct {
	Data []Employee `json:"data"`
}

// GetData returns the value of Data.
func (s *GetEmployeesResponse) GetData() []Employee {
	return s.Data
}

// SetData sets the value of Data.
func (s *GetEmployeesResponse) SetData(val []Employee) {
	s.Data = val
}

func (*GetEmployeesResponse) getEmployeesRes() {}

type GetEmployeesUnauthorized ErrorContent

func (*GetEmployeesUnauthorized) getEmployeesRes() {}

type GetInstancesByItemIdForbidden ErrorContent

func (*GetInstancesByItemIdForbidden) getInstancesByItemIdRes() {}

// Ref: #/components/schemas/GetInstancesByItemIdResponse
type GetInstancesByItemIdResponse struct {
	Data []GetInstancesByItemIdResponseDataItem `json:"data"`
}

// GetData returns the value of Data.
func (s *GetInstancesByItemIdResponse) GetData() []GetInstancesByItemIdResponseDataItem {
	return s.Data
}

// SetData sets the value of Data.
func (s *GetInstancesByItemIdResponse) SetData(val []GetInstancesByItemIdResponseDataItem) {
	s.Data = val
}

func (*GetInstancesByItemIdResponse) getInstancesByItemIdRes() {}

type GetInstancesByItemIdResponseDataItem struct {
	ID      uuid.UUID                                  `json:"id"`
	Status  GetInstancesByItemIdResponseDataItemStatus `json:"status"`
	Variant ItemVariant                                `json:"variant"`
	Cell    CellForInstance                            `json:"cell"`
}

// GetID returns the value of ID.
func (s *GetInstancesByItemIdResponseDataItem) GetID() uuid.UUID {
	return s.ID
}

// GetStatus returns the value of Status.
func (s *GetInstancesByItemIdResponseDataItem) GetStatus() GetInstancesByItemIdResponseDataItemStatus {
	return s.Status
}

// GetVariant returns the value of Variant.
func (s *GetInstancesByItemIdResponseDataItem) GetVariant() ItemVariant {
	return s.Variant
}

// GetCell returns the value of Cell.
func (s *GetInstancesByItemIdResponseDataItem) GetCell() CellForInstance {
	return s.Cell
}

// SetID sets the value of ID.
func (s *GetInstancesByItemIdResponseDataItem) SetID(val uuid.UUID) {
	s.ID = val
}

// SetStatus sets the value of Status.
func (s *GetInstancesByItemIdResponseDataItem) SetStatus(val GetInstancesByItemIdResponseDataItemStatus) {
	s.Status = val
}

// SetVariant sets the value of Variant.
func (s *GetInstancesByItemIdResponseDataItem) SetVariant(val ItemVariant) {
	s.Variant = val
}

// SetCell sets the value of Cell.
func (s *GetInstancesByItemIdResponseDataItem) SetCell(val CellForInstance) {
	s.Cell = val
}

type GetInstancesByItemIdResponseDataItemStatus string

const (
	GetInstancesByItemIdResponseDataItemStatusAvailable GetInstancesByItemIdResponseDataItemStatus = "available"
	GetInstancesByItemIdResponseDataItemStatusReserved  GetInstancesByItemIdResponseDataItemStatus = "reserved"
	GetInstancesByItemIdResponseDataItemStatusConsumed  GetInstancesByItemIdResponseDataItemStatus = "consumed"
)

// AllValues returns all GetInstancesByItemIdResponseDataItemStatus values.
func (GetInstancesByItemIdResponseDataItemStatus) AllValues() []GetInstancesByItemIdResponseDataItemStatus {
	return []GetInstancesByItemIdResponseDataItemStatus{
		GetInstancesByItemIdResponseDataItemStatusAvailable,
		GetInstancesByItemIdResponseDataItemStatusReserved,
		GetInstancesByItemIdResponseDataItemStatusConsumed,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetInstancesByItemIdResponseDataItemStatus) MarshalText() ([]byte, error) {
	switch s {
	case GetInstancesByItemIdResponseDataItemStatusAvailable:
		return []byte(s), nil
	case GetInstancesByItemIdResponseDataItemStatusReserved:
		return []byte(s), nil
	case GetInstancesByItemIdResponseDataItemStatusConsumed:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetInstancesByItemIdResponseDataItemStatus) UnmarshalText(data []byte) error {
	switch GetInstancesByItemIdResponseDataItemStatus(data) {
	case GetInstancesByItemIdResponseDataItemStatusAvailable:
		*s = GetInstancesByItemIdResponseDataItemStatusAvailable
		return nil
	case GetInstancesByItemIdResponseDataItemStatusReserved:
		*s = GetInstancesByItemIdResponseDataItemStatusReserved
		return nil
	case GetInstancesByItemIdResponseDataItemStatusConsumed:
		*s = GetInstancesByItemIdResponseDataItemStatusConsumed
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetInstancesByItemIdUnauthorized ErrorContent

func (*GetInstancesByItemIdUnauthorized) getInstancesByItemIdRes() {}

type GetInstancesForbidden ErrorContent

func (*GetInstancesForbidden) getInstancesRes() {}

// Ref: #/components/schemas/GetInstancesResponse
type GetInstancesResponse struct {
	Data []InstanceFull `json:"data"`
}

// GetData returns the value of Data.
func (s *GetInstancesResponse) GetData() []InstanceFull {
	return s.Data
}

// SetData sets the value of Data.
func (s *GetInstancesResponse) SetData(val []InstanceFull) {
	s.Data = val
}

func (*GetInstancesResponse) getInstancesRes() {}

type GetInstancesUnauthorized ErrorContent

func (*GetInstancesUnauthorized) getInstancesRes() {}

type GetItemByIdForbidden ErrorContent

func (*GetItemByIdForbidden) getItemByIdRes() {}

// Ref: #/components/schemas/GetItemByIdResponse
type GetItemByIdResponse struct {
	Data ItemFull `json:"data"`
}

// GetData returns the value of Data.
func (s *GetItemByIdResponse) GetData() ItemFull {
	return s.Data
}

// SetData sets the value of Data.
func (s *GetItemByIdResponse) SetData(val ItemFull) {
	s.Data = val
}

func (*GetItemByIdResponse) getItemByIdRes() {}

type GetItemByIdUnauthorized ErrorContent

func (*GetItemByIdUnauthorized) getItemByIdRes() {}

type GetItemVariantByIdForbidden ErrorContent

func (*GetItemVariantByIdForbidden) getItemVariantByIdRes() {}

// Ref: #/components/schemas/GetItemVariantByIdResponse
type GetItemVariantByIdResponse struct {
	Data ItemVariant `json:"data"`
}

// GetData returns the value of Data.
func (s *GetItemVariantByIdResponse) GetData() ItemVariant {
	return s.Data
}

// SetData sets the value of Data.
func (s *GetItemVariantByIdResponse) SetData(val ItemVariant) {
	s.Data = val
}

func (*GetItemVariantByIdResponse) getItemVariantByIdRes() {}

type GetItemVariantByIdUnauthorized ErrorContent

func (*GetItemVariantByIdUnauthorized) getItemVariantByIdRes() {}

type GetItemVariantsForbidden ErrorContent

func (*GetItemVariantsForbidden) getItemVariantsRes() {}

// Ref: #/components/schemas/GetItemVariantsResponse
type GetItemVariantsResponse struct {
	Data []ItemVariant `json:"data"`
}

// GetData returns the value of Data.
func (s *GetItemVariantsResponse) GetData() []ItemVariant {
	return s.Data
}

// SetData sets the value of Data.
func (s *GetItemVariantsResponse) SetData(val []ItemVariant) {
	s.Data = val
}

func (*GetItemVariantsResponse) getItemVariantsRes() {}

type GetItemVariantsUnauthorized ErrorContent

func (*GetItemVariantsUnauthorized) getItemVariantsRes() {}

type GetItemsForbidden ErrorContent

func (*GetItemsForbidden) getItemsRes() {}

// Ref: #/components/schemas/GetItemsResponse
type GetItemsResponse struct {
	Data []ItemForList `json:"data"`
}

// GetData returns the value of Data.
func (s *GetItemsResponse) GetData() []ItemForList {
	return s.Data
}

// SetData sets the value of Data.
func (s *GetItemsResponse) SetData(val []ItemForList) {
	s.Data = val
}

func (*GetItemsResponse) getItemsRes() {}

type GetItemsUnauthorized ErrorContent

func (*GetItemsUnauthorized) getItemsRes() {}

type GetOrganizationByIdForbidden ErrorContent

func (*GetOrganizationByIdForbidden) getOrganizationByIdRes() {}

// Ref: #/components/schemas/GetOrganizationByIdResponse
type GetOrganizationByIdResponse struct {
	Data Organization `json:"data"`
}

// GetData returns the value of Data.
func (s *GetOrganizationByIdResponse) GetData() Organization {
	return s.Data
}

// SetData sets the value of Data.
func (s *GetOrganizationByIdResponse) SetData(val Organization) {
	s.Data = val
}

func (*GetOrganizationByIdResponse) getOrganizationByIdRes() {}

type GetOrganizationByIdUnauthorized ErrorContent

func (*GetOrganizationByIdUnauthorized) getOrganizationByIdRes() {}

type GetOrganizationUnitByIdForbidden ErrorContent

func (*GetOrganizationUnitByIdForbidden) getOrganizationUnitByIdRes() {}

// Ref: #/components/schemas/GetOrganizationUnitByIdResponse
type GetOrganizationUnitByIdResponse struct {
	Data Unit `json:"data"`
}

// GetData returns the value of Data.
func (s *GetOrganizationUnitByIdResponse) GetData() Unit {
	return s.Data
}

// SetData sets the value of Data.
func (s *GetOrganizationUnitByIdResponse) SetData(val Unit) {
	s.Data = val
}

func (*GetOrganizationUnitByIdResponse) getOrganizationUnitByIdRes() {}

type GetOrganizationUnitByIdUnauthorized ErrorContent

func (*GetOrganizationUnitByIdUnauthorized) getOrganizationUnitByIdRes() {}

type GetOrganizationUnitsForbidden ErrorContent

func (*GetOrganizationUnitsForbidden) getOrganizationUnitsRes() {}

// Ref: #/components/schemas/GetOrganizationUnitsResponse
type GetOrganizationUnitsResponse struct {
	Data []Unit `json:"data"`
}

// GetData returns the value of Data.
func (s *GetOrganizationUnitsResponse) GetData() []Unit {
	return s.Data
}

// SetData sets the value of Data.
func (s *GetOrganizationUnitsResponse) SetData(val []Unit) {
	s.Data = val
}

func (*GetOrganizationUnitsResponse) getOrganizationUnitsRes() {}

type GetOrganizationUnitsUnauthorized ErrorContent

func (*GetOrganizationUnitsUnauthorized) getOrganizationUnitsRes() {}

// Ref: #/components/schemas/GetOrganizationsResponse
type GetOrganizationsResponse struct {
	Data []Organization `json:"data"`
}

// GetData returns the value of Data.
func (s *GetOrganizationsResponse) GetData() []Organization {
	return s.Data
}

// SetData sets the value of Data.
func (s *GetOrganizationsResponse) SetData(val []Organization) {
	s.Data = val
}

func (*GetOrganizationsResponse) getOrganizationsRes() {}

type GetRolesOK struct {
	Data []Role `json:"data"`
}

// GetData returns the value of Data.
func (s *GetRolesOK) GetData() []Role {
	return s.Data
}

// SetData sets the value of Data.
func (s *GetRolesOK) SetData(val []Role) {
	s.Data = val
}

func (*GetRolesOK) getRolesRes() {}

type GetStorageGroupByIdForbidden ErrorContent

func (*GetStorageGroupByIdForbidden) getStorageGroupByIdRes() {}

// Ref: #/components/schemas/GetStorageGroupByIdResponse
type GetStorageGroupByIdResponse struct {
	Data StorageGroup `json:"data"`
}

// GetData returns the value of Data.
func (s *GetStorageGroupByIdResponse) GetData() StorageGroup {
	return s.Data
}

// SetData sets the value of Data.
func (s *GetStorageGroupByIdResponse) SetData(val StorageGroup) {
	s.Data = val
}

func (*GetStorageGroupByIdResponse) getStorageGroupByIdRes() {}

type GetStorageGroupByIdUnauthorized ErrorContent

func (*GetStorageGroupByIdUnauthorized) getStorageGroupByIdRes() {}

type GetStorageGroupsForbidden ErrorContent

func (*GetStorageGroupsForbidden) getStorageGroupsRes() {}

// Ref: #/components/schemas/GetStorageGroupsResponse
type GetStorageGroupsResponse struct {
	Data []StorageGroup `json:"data"`
}

// GetData returns the value of Data.
func (s *GetStorageGroupsResponse) GetData() []StorageGroup {
	return s.Data
}

// SetData sets the value of Data.
func (s *GetStorageGroupsResponse) SetData(val []StorageGroup) {
	s.Data = val
}

func (*GetStorageGroupsResponse) getStorageGroupsRes() {}

type GetStorageGroupsUnauthorized ErrorContent

func (*GetStorageGroupsUnauthorized) getStorageGroupsRes() {}

// Ref: #/components/schemas/InstanceForItem
type InstanceForItem struct {
	ID      uuid.UUID             `json:"id"`
	Status  InstanceForItemStatus `json:"status"`
	Variant ItemVariant           `json:"variant"`
	Cell    CellForInstance       `json:"cell"`
}

// GetID returns the value of ID.
func (s *InstanceForItem) GetID() uuid.UUID {
	return s.ID
}

// GetStatus returns the value of Status.
func (s *InstanceForItem) GetStatus() InstanceForItemStatus {
	return s.Status
}

// GetVariant returns the value of Variant.
func (s *InstanceForItem) GetVariant() ItemVariant {
	return s.Variant
}

// GetCell returns the value of Cell.
func (s *InstanceForItem) GetCell() CellForInstance {
	return s.Cell
}

// SetID sets the value of ID.
func (s *InstanceForItem) SetID(val uuid.UUID) {
	s.ID = val
}

// SetStatus sets the value of Status.
func (s *InstanceForItem) SetStatus(val InstanceForItemStatus) {
	s.Status = val
}

// SetVariant sets the value of Variant.
func (s *InstanceForItem) SetVariant(val ItemVariant) {
	s.Variant = val
}

// SetCell sets the value of Cell.
func (s *InstanceForItem) SetCell(val CellForInstance) {
	s.Cell = val
}

type InstanceForItemStatus string

const (
	InstanceForItemStatusAvailable InstanceForItemStatus = "available"
	InstanceForItemStatusReserved  InstanceForItemStatus = "reserved"
	InstanceForItemStatusConsumed  InstanceForItemStatus = "consumed"
)

// AllValues returns all InstanceForItemStatus values.
func (InstanceForItemStatus) AllValues() []InstanceForItemStatus {
	return []InstanceForItemStatus{
		InstanceForItemStatusAvailable,
		InstanceForItemStatusReserved,
		InstanceForItemStatusConsumed,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s InstanceForItemStatus) MarshalText() ([]byte, error) {
	switch s {
	case InstanceForItemStatusAvailable:
		return []byte(s), nil
	case InstanceForItemStatusReserved:
		return []byte(s), nil
	case InstanceForItemStatusConsumed:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *InstanceForItemStatus) UnmarshalText(data []byte) error {
	switch InstanceForItemStatus(data) {
	case InstanceForItemStatusAvailable:
		*s = InstanceForItemStatusAvailable
		return nil
	case InstanceForItemStatusReserved:
		*s = InstanceForItemStatusReserved
		return nil
	case InstanceForItemStatusConsumed:
		*s = InstanceForItemStatusConsumed
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/InstanceFull
type InstanceFull struct {
	// Instance ID.
	ID      uuid.UUID          `json:"id"`
	Status  InstanceFullStatus `json:"status"`
	Item    OptItem            `json:"item"`
	Variant ItemVariant        `json:"variant"`
	Cell    CellForInstance    `json:"cell"`
}

// GetID returns the value of ID.
func (s *InstanceFull) GetID() uuid.UUID {
	return s.ID
}

// GetStatus returns the value of Status.
func (s *InstanceFull) GetStatus() InstanceFullStatus {
	return s.Status
}

// GetItem returns the value of Item.
func (s *InstanceFull) GetItem() OptItem {
	return s.Item
}

// GetVariant returns the value of Variant.
func (s *InstanceFull) GetVariant() ItemVariant {
	return s.Variant
}

// GetCell returns the value of Cell.
func (s *InstanceFull) GetCell() CellForInstance {
	return s.Cell
}

// SetID sets the value of ID.
func (s *InstanceFull) SetID(val uuid.UUID) {
	s.ID = val
}

// SetStatus sets the value of Status.
func (s *InstanceFull) SetStatus(val InstanceFullStatus) {
	s.Status = val
}

// SetItem sets the value of Item.
func (s *InstanceFull) SetItem(val OptItem) {
	s.Item = val
}

// SetVariant sets the value of Variant.
func (s *InstanceFull) SetVariant(val ItemVariant) {
	s.Variant = val
}

// SetCell sets the value of Cell.
func (s *InstanceFull) SetCell(val CellForInstance) {
	s.Cell = val
}

type InstanceFullStatus string

const (
	InstanceFullStatusAvailable InstanceFullStatus = "available"
	InstanceFullStatusReserved  InstanceFullStatus = "reserved"
	InstanceFullStatusConsumed  InstanceFullStatus = "consumed"
)

// AllValues returns all InstanceFullStatus values.
func (InstanceFullStatus) AllValues() []InstanceFullStatus {
	return []InstanceFullStatus{
		InstanceFullStatusAvailable,
		InstanceFullStatusReserved,
		InstanceFullStatusConsumed,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s InstanceFullStatus) MarshalText() ([]byte, error) {
	switch s {
	case InstanceFullStatusAvailable:
		return []byte(s), nil
	case InstanceFullStatusReserved:
		return []byte(s), nil
	case InstanceFullStatusConsumed:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *InstanceFullStatus) UnmarshalText(data []byte) error {
	switch InstanceFullStatus(data) {
	case InstanceFullStatusAvailable:
		*s = InstanceFullStatusAvailable
		return nil
	case InstanceFullStatusReserved:
		*s = InstanceFullStatusReserved
		return nil
	case InstanceFullStatusConsumed:
		*s = InstanceFullStatusConsumed
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type InviteEmployeeForbidden ErrorContent

func (*InviteEmployeeForbidden) inviteEmployeeRes() {}

// Ref: #/components/schemas/InviteEmployeeRequest
type InviteEmployeeRequest struct {
	Email  string `json:"email"`
	RoleId int    `json:"roleId"`
}

// GetEmail returns the value of Email.
func (s *InviteEmployeeRequest) GetEmail() string {
	return s.Email
}

// GetRoleId returns the value of RoleId.
func (s *InviteEmployeeRequest) GetRoleId() int {
	return s.RoleId
}

// SetEmail sets the value of Email.
func (s *InviteEmployeeRequest) SetEmail(val string) {
	s.Email = val
}

// SetRoleId sets the value of RoleId.
func (s *InviteEmployeeRequest) SetRoleId(val int) {
	s.RoleId = val
}

type InviteEmployeeUnauthorized ErrorContent

func (*InviteEmployeeUnauthorized) inviteEmployeeRes() {}

// Merged schema.
// Ref: #/components/schemas/Item
type Item struct {
	// Merged property.
	ID   uuid.UUID `json:"id"`
	Name string    `json:"name"`
	// Merged property.
	Description NilString `json:"description"`
}

// GetID returns the value of ID.
func (s *Item) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *Item) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *Item) GetDescription() NilString {
	return s.Description
}

// SetID sets the value of ID.
func (s *Item) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Item) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *Item) SetDescription(val NilString) {
	s.Description = val
}

// Merged schema.
// Ref: #/components/schemas/ItemForList
type ItemForList struct {
	// Merged property.
	ID   uuid.UUID `json:"id"`
	Name string    `json:"name"`
	// Merged property.
	Description NilString     `json:"description"`
	Variants    []ItemVariant `json:"variants"`
}

// GetID returns the value of ID.
func (s *ItemForList) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *ItemForList) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *ItemForList) GetDescription() NilString {
	return s.Description
}

// GetVariants returns the value of Variants.
func (s *ItemForList) GetVariants() []ItemVariant {
	return s.Variants
}

// SetID sets the value of ID.
func (s *ItemForList) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ItemForList) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *ItemForList) SetDescription(val NilString) {
	s.Description = val
}

// SetVariants sets the value of Variants.
func (s *ItemForList) SetVariants(val []ItemVariant) {
	s.Variants = val
}

// Merged schema.
// Ref: #/components/schemas/ItemFull
type ItemFull struct {
	// Merged property.
	ID   uuid.UUID `json:"id"`
	Name string    `json:"name"`
	// Merged property.
	Description NilString         `json:"description"`
	Variants    []ItemVariant     `json:"variants"`
	Instances   []InstanceForItem `json:"instances"`
}

// GetID returns the value of ID.
func (s *ItemFull) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *ItemFull) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *ItemFull) GetDescription() NilString {
	return s.Description
}

// GetVariants returns the value of Variants.
func (s *ItemFull) GetVariants() []ItemVariant {
	return s.Variants
}

// GetInstances returns the value of Instances.
func (s *ItemFull) GetInstances() []InstanceForItem {
	return s.Instances
}

// SetID sets the value of ID.
func (s *ItemFull) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ItemFull) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *ItemFull) SetDescription(val NilString) {
	s.Description = val
}

// SetVariants sets the value of Variants.
func (s *ItemFull) SetVariants(val []ItemVariant) {
	s.Variants = val
}

// SetInstances sets the value of Instances.
func (s *ItemFull) SetInstances(val []InstanceForItem) {
	s.Instances = val
}

// Merged schema.
// Ref: #/components/schemas/ItemVariant
type ItemVariant struct {
	ID   uuid.UUID `json:"id"`
	Name string    `json:"name"`
	// Merged property.
	Article NilString `json:"article"`
	// Merged property.
	Ean13 NilInt32 `json:"ean13"`
}

// GetID returns the value of ID.
func (s *ItemVariant) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *ItemVariant) GetName() string {
	return s.Name
}

// GetArticle returns the value of Article.
func (s *ItemVariant) GetArticle() NilString {
	return s.Article
}

// GetEan13 returns the value of Ean13.
func (s *ItemVariant) GetEan13() NilInt32 {
	return s.Ean13
}

// SetID sets the value of ID.
func (s *ItemVariant) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ItemVariant) SetName(val string) {
	s.Name = val
}

// SetArticle sets the value of Article.
func (s *ItemVariant) SetArticle(val NilString) {
	s.Article = val
}

// SetEan13 sets the value of Ean13.
func (s *ItemVariant) SetEan13(val NilInt32) {
	s.Ean13 = val
}

// Ref: #/components/responses/LogoutResponse
type LogoutResponse struct {
	SetCookie string
}

// GetSetCookie returns the value of SetCookie.
func (s *LogoutResponse) GetSetCookie() string {
	return s.SetCookie
}

// SetSetCookie sets the value of SetCookie.
func (s *LogoutResponse) SetSetCookie(val string) {
	s.SetCookie = val
}

func (*LogoutResponse) logoutRes() {}

// NewNilAuditLogPostchangeState returns new NilAuditLogPostchangeState with value set to v.
func NewNilAuditLogPostchangeState(v AuditLogPostchangeState) NilAuditLogPostchangeState {
	return NilAuditLogPostchangeState{
		Value: v,
	}
}

// NilAuditLogPostchangeState is nullable AuditLogPostchangeState.
type NilAuditLogPostchangeState struct {
	Value AuditLogPostchangeState
	Null  bool
}

// SetTo sets value to v.
func (o *NilAuditLogPostchangeState) SetTo(v AuditLogPostchangeState) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilAuditLogPostchangeState) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilAuditLogPostchangeState) SetToNull() {
	o.Null = true
	var v AuditLogPostchangeState
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilAuditLogPostchangeState) Get() (v AuditLogPostchangeState, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilAuditLogPostchangeState) Or(d AuditLogPostchangeState) AuditLogPostchangeState {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilAuditLogPrechangeState returns new NilAuditLogPrechangeState with value set to v.
func NewNilAuditLogPrechangeState(v AuditLogPrechangeState) NilAuditLogPrechangeState {
	return NilAuditLogPrechangeState{
		Value: v,
	}
}

// NilAuditLogPrechangeState is nullable AuditLogPrechangeState.
type NilAuditLogPrechangeState struct {
	Value AuditLogPrechangeState
	Null  bool
}

// SetTo sets value to v.
func (o *NilAuditLogPrechangeState) SetTo(v AuditLogPrechangeState) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilAuditLogPrechangeState) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilAuditLogPrechangeState) SetToNull() {
	o.Null = true
	var v AuditLogPrechangeState
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilAuditLogPrechangeState) Get() (v AuditLogPrechangeState, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilAuditLogPrechangeState) Or(d AuditLogPrechangeState) AuditLogPrechangeState {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilInt32 returns new NilInt32 with value set to v.
func NewNilInt32(v int32) NilInt32 {
	return NilInt32{
		Value: v,
	}
}

// NilInt32 is nullable int32.
type NilInt32 struct {
	Value int32
	Null  bool
}

// SetTo sets value to v.
func (o *NilInt32) SetTo(v int32) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilInt32) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilInt32) SetToNull() {
	o.Null = true
	var v int32
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilInt32) Get() (v int32, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilInt32) Or(d int32) int32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilString returns new NilString with value set to v.
func NewNilString(v string) NilString {
	return NilString{
		Value: v,
	}
}

// NilString is nullable string.
type NilString struct {
	Value string
	Null  bool
}

// SetTo sets value to v.
func (o *NilString) SetTo(v string) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilString) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilString) SetToNull() {
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilUUID returns new NilUUID with value set to v.
func NewNilUUID(v uuid.UUID) NilUUID {
	return NilUUID{
		Value: v,
	}
}

// NilUUID is nullable uuid.UUID.
type NilUUID struct {
	Value uuid.UUID
	Null  bool
}

// SetTo sets value to v.
func (o *NilUUID) SetTo(v uuid.UUID) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilUUID) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilUUID) SetToNull() {
	o.Null = true
	var v uuid.UUID
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilUUID) Get() (v uuid.UUID, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptItem returns new OptItem with value set to v.
func NewOptItem(v Item) OptItem {
	return OptItem{
		Value: v,
		Set:   true,
	}
}

// OptItem is optional Item.
type OptItem struct {
	Value Item
	Set   bool
}

// IsSet returns true if OptItem was set.
func (o OptItem) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptItem) Reset() {
	var v Item
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptItem) SetTo(v Item) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptItem) Get() (v Item, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptItem) Or(d Item) Item {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilInt32 returns new OptNilInt32 with value set to v.
func NewOptNilInt32(v int32) OptNilInt32 {
	return OptNilInt32{
		Value: v,
		Set:   true,
	}
}

// OptNilInt32 is optional nullable int32.
type OptNilInt32 struct {
	Value int32
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInt32 was set.
func (o OptNilInt32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInt32) Reset() {
	var v int32
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInt32) SetTo(v int32) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilInt32) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilInt32) SetToNull() {
	o.Set = true
	o.Null = true
	var v int32
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInt32) Get() (v int32, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilInt32) Or(d int32) int32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUUID returns new OptNilUUID with value set to v.
func NewOptNilUUID(v uuid.UUID) OptNilUUID {
	return OptNilUUID{
		Value: v,
		Set:   true,
	}
}

// OptNilUUID is optional nullable uuid.UUID.
type OptNilUUID struct {
	Value uuid.UUID
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUUID was set.
func (o OptNilUUID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUUID) Reset() {
	var v uuid.UUID
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUUID) SetTo(v uuid.UUID) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilUUID) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilUUID) SetToNull() {
	o.Set = true
	o.Null = true
	var v uuid.UUID
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUUID) Get() (v uuid.UUID, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptStorageAlias returns new OptStorageAlias with value set to v.
func NewOptStorageAlias(v StorageAlias) OptStorageAlias {
	return OptStorageAlias{
		Value: v,
		Set:   true,
	}
}

// OptStorageAlias is optional StorageAlias.
type OptStorageAlias struct {
	Value StorageAlias
	Set   bool
}

// IsSet returns true if OptStorageAlias was set.
func (o OptStorageAlias) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptStorageAlias) Reset() {
	var v StorageAlias
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptStorageAlias) SetTo(v StorageAlias) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptStorageAlias) Get() (v StorageAlias, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptStorageAlias) Or(d StorageAlias) StorageAlias {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUUID returns new OptUUID with value set to v.
func NewOptUUID(v uuid.UUID) OptUUID {
	return OptUUID{
		Value: v,
		Set:   true,
	}
}

// OptUUID is optional uuid.UUID.
type OptUUID struct {
	Value uuid.UUID
	Set   bool
}

// IsSet returns true if OptUUID was set.
func (o OptUUID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUUID) Reset() {
	var v uuid.UUID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUUID) SetTo(v uuid.UUID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUUID) Get() (v uuid.UUID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Merged schema.
// Ref: #/components/schemas/Organization
type Organization struct {
	ID        uuid.UUID `json:"id"`
	Name      string    `json:"name"`
	Subdomain string    `json:"subdomain"`
}

// GetID returns the value of ID.
func (s *Organization) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *Organization) GetName() string {
	return s.Name
}

// GetSubdomain returns the value of Subdomain.
func (s *Organization) GetSubdomain() string {
	return s.Subdomain
}

// SetID sets the value of ID.
func (s *Organization) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Organization) SetName(val string) {
	s.Name = val
}

// SetSubdomain sets the value of Subdomain.
func (s *Organization) SetSubdomain(val string) {
	s.Subdomain = val
}

type PatchCellForbidden ErrorContent

func (*PatchCellForbidden) patchCellRes() {}

// Ref: #/components/schemas/PatchCellRequest
type PatchCellRequest struct {
	Alias    OptString `json:"alias"`
	Row      OptInt    `json:"row"`
	Level    OptInt    `json:"level"`
	Position OptInt    `json:"position"`
}

// GetAlias returns the value of Alias.
func (s *PatchCellRequest) GetAlias() OptString {
	return s.Alias
}

// GetRow returns the value of Row.
func (s *PatchCellRequest) GetRow() OptInt {
	return s.Row
}

// GetLevel returns the value of Level.
func (s *PatchCellRequest) GetLevel() OptInt {
	return s.Level
}

// GetPosition returns the value of Position.
func (s *PatchCellRequest) GetPosition() OptInt {
	return s.Position
}

// SetAlias sets the value of Alias.
func (s *PatchCellRequest) SetAlias(val OptString) {
	s.Alias = val
}

// SetRow sets the value of Row.
func (s *PatchCellRequest) SetRow(val OptInt) {
	s.Row = val
}

// SetLevel sets the value of Level.
func (s *PatchCellRequest) SetLevel(val OptInt) {
	s.Level = val
}

// SetPosition sets the value of Position.
func (s *PatchCellRequest) SetPosition(val OptInt) {
	s.Position = val
}

// Ref: #/components/schemas/PatchCellResponse
type PatchCellResponse struct {
	Data CellBase `json:"data"`
}

// GetData returns the value of Data.
func (s *PatchCellResponse) GetData() CellBase {
	return s.Data
}

// SetData sets the value of Data.
func (s *PatchCellResponse) SetData(val CellBase) {
	s.Data = val
}

func (*PatchCellResponse) patchCellRes() {}

type PatchCellUnauthorized ErrorContent

func (*PatchCellUnauthorized) patchCellRes() {}

type PatchCellsGroupForbidden ErrorContent

func (*PatchCellsGroupForbidden) patchCellsGroupRes() {}

// Ref: #/components/schemas/PatchCellsGroupRequest
type PatchCellsGroupRequest struct {
	Name           OptString       `json:"name"`
	Alias          OptStorageAlias `json:"alias"`
	StorageGroupId OptUUID         `json:"storageGroupId"`
	UnitId         OptUUID         `json:"unitId"`
}

// GetName returns the value of Name.
func (s *PatchCellsGroupRequest) GetName() OptString {
	return s.Name
}

// GetAlias returns the value of Alias.
func (s *PatchCellsGroupRequest) GetAlias() OptStorageAlias {
	return s.Alias
}

// GetStorageGroupId returns the value of StorageGroupId.
func (s *PatchCellsGroupRequest) GetStorageGroupId() OptUUID {
	return s.StorageGroupId
}

// GetUnitId returns the value of UnitId.
func (s *PatchCellsGroupRequest) GetUnitId() OptUUID {
	return s.UnitId
}

// SetName sets the value of Name.
func (s *PatchCellsGroupRequest) SetName(val OptString) {
	s.Name = val
}

// SetAlias sets the value of Alias.
func (s *PatchCellsGroupRequest) SetAlias(val OptStorageAlias) {
	s.Alias = val
}

// SetStorageGroupId sets the value of StorageGroupId.
func (s *PatchCellsGroupRequest) SetStorageGroupId(val OptUUID) {
	s.StorageGroupId = val
}

// SetUnitId sets the value of UnitId.
func (s *PatchCellsGroupRequest) SetUnitId(val OptUUID) {
	s.UnitId = val
}

// Ref: #/components/schemas/PatchCellsGroupResponse
type PatchCellsGroupResponse struct {
	Data CellGroup `json:"data"`
}

// GetData returns the value of Data.
func (s *PatchCellsGroupResponse) GetData() CellGroup {
	return s.Data
}

// SetData sets the value of Data.
func (s *PatchCellsGroupResponse) SetData(val CellGroup) {
	s.Data = val
}

func (*PatchCellsGroupResponse) patchCellsGroupRes() {}

type PatchCellsGroupUnauthorized ErrorContent

func (*PatchCellsGroupUnauthorized) patchCellsGroupRes() {}

// Ref: #/components/schemas/PatchCurrentUserRequest
type PatchCurrentUserRequest struct {
	FirstName  string    `json:"first_name"`
	LastName   string    `json:"last_name"`
	MiddleName NilString `json:"middle_name"`
}

// GetFirstName returns the value of FirstName.
func (s *PatchCurrentUserRequest) GetFirstName() string {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *PatchCurrentUserRequest) GetLastName() string {
	return s.LastName
}

// GetMiddleName returns the value of MiddleName.
func (s *PatchCurrentUserRequest) GetMiddleName() NilString {
	return s.MiddleName
}

// SetFirstName sets the value of FirstName.
func (s *PatchCurrentUserRequest) SetFirstName(val string) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *PatchCurrentUserRequest) SetLastName(val string) {
	s.LastName = val
}

// SetMiddleName sets the value of MiddleName.
func (s *PatchCurrentUserRequest) SetMiddleName(val NilString) {
	s.MiddleName = val
}

type PatchEmployeeByIdForbidden ErrorContent

func (*PatchEmployeeByIdForbidden) patchEmployeeByIdRes() {}

type PatchEmployeeByIdUnauthorized ErrorContent

func (*PatchEmployeeByIdUnauthorized) patchEmployeeByIdRes() {}

// Ref: #/components/schemas/PatchEmployeeRequest
type PatchEmployeeRequest struct {
	UserId uuid.UUID `json:"userId"`
	RoleId OptInt    `json:"roleId"`
}

// GetUserId returns the value of UserId.
func (s *PatchEmployeeRequest) GetUserId() uuid.UUID {
	return s.UserId
}

// GetRoleId returns the value of RoleId.
func (s *PatchEmployeeRequest) GetRoleId() OptInt {
	return s.RoleId
}

// SetUserId sets the value of UserId.
func (s *PatchEmployeeRequest) SetUserId(val uuid.UUID) {
	s.UserId = val
}

// SetRoleId sets the value of RoleId.
func (s *PatchEmployeeRequest) SetRoleId(val OptInt) {
	s.RoleId = val
}

type PatchOrganizationUnitForbidden ErrorContent

func (*PatchOrganizationUnitForbidden) patchOrganizationUnitRes() {}

// Ref: #/components/schemas/PatchOrganizationUnitRequest
type PatchOrganizationUnitRequest struct {
	Name    OptString    `json:"name"`
	Alias   OptString    `json:"alias"`
	Address OptNilString `json:"address"`
}

// GetName returns the value of Name.
func (s *PatchOrganizationUnitRequest) GetName() OptString {
	return s.Name
}

// GetAlias returns the value of Alias.
func (s *PatchOrganizationUnitRequest) GetAlias() OptString {
	return s.Alias
}

// GetAddress returns the value of Address.
func (s *PatchOrganizationUnitRequest) GetAddress() OptNilString {
	return s.Address
}

// SetName sets the value of Name.
func (s *PatchOrganizationUnitRequest) SetName(val OptString) {
	s.Name = val
}

// SetAlias sets the value of Alias.
func (s *PatchOrganizationUnitRequest) SetAlias(val OptString) {
	s.Alias = val
}

// SetAddress sets the value of Address.
func (s *PatchOrganizationUnitRequest) SetAddress(val OptNilString) {
	s.Address = val
}

// Ref: #/components/schemas/PatchOrganizationUnitResponse
type PatchOrganizationUnitResponse struct {
	Data Unit `json:"data"`
}

// GetData returns the value of Data.
func (s *PatchOrganizationUnitResponse) GetData() Unit {
	return s.Data
}

// SetData sets the value of Data.
func (s *PatchOrganizationUnitResponse) SetData(val Unit) {
	s.Data = val
}

func (*PatchOrganizationUnitResponse) patchOrganizationUnitRes() {}

type PatchOrganizationUnitUnauthorized ErrorContent

func (*PatchOrganizationUnitUnauthorized) patchOrganizationUnitRes() {}

type PatchStorageGroupForbidden ErrorContent

func (*PatchStorageGroupForbidden) patchStorageGroupRes() {}

// Ref: #/components/schemas/PatchStorageGroupRequest
type PatchStorageGroupRequest struct {
	ParentId OptNilUUID `json:"parentId"`
	Name     OptString  `json:"name"`
	Alias    OptString  `json:"alias"`
	UnitId   OptUUID    `json:"unitId"`
}

// GetParentId returns the value of ParentId.
func (s *PatchStorageGroupRequest) GetParentId() OptNilUUID {
	return s.ParentId
}

// GetName returns the value of Name.
func (s *PatchStorageGroupRequest) GetName() OptString {
	return s.Name
}

// GetAlias returns the value of Alias.
func (s *PatchStorageGroupRequest) GetAlias() OptString {
	return s.Alias
}

// GetUnitId returns the value of UnitId.
func (s *PatchStorageGroupRequest) GetUnitId() OptUUID {
	return s.UnitId
}

// SetParentId sets the value of ParentId.
func (s *PatchStorageGroupRequest) SetParentId(val OptNilUUID) {
	s.ParentId = val
}

// SetName sets the value of Name.
func (s *PatchStorageGroupRequest) SetName(val OptString) {
	s.Name = val
}

// SetAlias sets the value of Alias.
func (s *PatchStorageGroupRequest) SetAlias(val OptString) {
	s.Alias = val
}

// SetUnitId sets the value of UnitId.
func (s *PatchStorageGroupRequest) SetUnitId(val OptUUID) {
	s.UnitId = val
}

// Ref: #/components/schemas/PatchStorageGroupResponse
type PatchStorageGroupResponse struct {
	Data StorageGroup `json:"data"`
}

// GetData returns the value of Data.
func (s *PatchStorageGroupResponse) GetData() StorageGroup {
	return s.Data
}

// SetData sets the value of Data.
func (s *PatchStorageGroupResponse) SetData(val StorageGroup) {
	s.Data = val
}

func (*PatchStorageGroupResponse) patchStorageGroupRes() {}

type PatchStorageGroupUnauthorized ErrorContent

func (*PatchStorageGroupUnauthorized) patchStorageGroupRes() {}

type RevokeApiTokenForbidden ErrorContent

func (*RevokeApiTokenForbidden) revokeApiTokenRes() {}

// RevokeApiTokenNoContent is response for RevokeApiToken operation.
type RevokeApiTokenNoContent struct{}

func (*RevokeApiTokenNoContent) revokeApiTokenRes() {}

type RevokeApiTokenUnauthorized ErrorContent

func (*RevokeApiTokenUnauthorized) revokeApiTokenRes() {}

// Ref: #/components/schemas/Role
type Role struct {
	ID          int    `json:"id"`
	Name        string `json:"name"`
	DisplayName string `json:"displayName"`
	Description string `json:"description"`
}

// GetID returns the value of ID.
func (s *Role) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *Role) GetName() string {
	return s.Name
}

// GetDisplayName returns the value of DisplayName.
func (s *Role) GetDisplayName() string {
	return s.DisplayName
}

// GetDescription returns the value of Description.
func (s *Role) GetDescription() string {
	return s.Description
}

// SetID sets the value of ID.
func (s *Role) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Role) SetName(val string) {
	s.Name = val
}

// SetDisplayName sets the value of DisplayName.
func (s *Role) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetDescription sets the value of Description.
func (s *Role) SetDescription(val string) {
	s.Description = val
}

type StorageAlias string

// Merged schema.
// Ref: #/components/schemas/StorageGroup
type StorageGroup struct {
	ID uuid.UUID `json:"id"`
	// Merged property.
	ParentId NilUUID `json:"parentId"`
	// Merged property.
	UnitId uuid.UUID    `json:"unitId"`
	Name   string       `json:"name"`
	Alias  StorageAlias `json:"alias"`
}

// GetID returns the value of ID.
func (s *StorageGroup) GetID() uuid.UUID {
	return s.ID
}

// GetParentId returns the value of ParentId.
func (s *StorageGroup) GetParentId() NilUUID {
	return s.ParentId
}

// GetUnitId returns the value of UnitId.
func (s *StorageGroup) GetUnitId() uuid.UUID {
	return s.UnitId
}

// GetName returns the value of Name.
func (s *StorageGroup) GetName() string {
	return s.Name
}

// GetAlias returns the value of Alias.
func (s *StorageGroup) GetAlias() StorageAlias {
	return s.Alias
}

// SetID sets the value of ID.
func (s *StorageGroup) SetID(val uuid.UUID) {
	s.ID = val
}

// SetParentId sets the value of ParentId.
func (s *StorageGroup) SetParentId(val NilUUID) {
	s.ParentId = val
}

// SetUnitId sets the value of UnitId.
func (s *StorageGroup) SetUnitId(val uuid.UUID) {
	s.UnitId = val
}

// SetName sets the value of Name.
func (s *StorageGroup) SetName(val string) {
	s.Name = val
}

// SetAlias sets the value of Alias.
func (s *StorageGroup) SetAlias(val StorageAlias) {
	s.Alias = val
}

// Ref: #/components/schemas/Token
type Token struct {
	ID uuid.UUID `json:"id"`
	// The name of the token.
	Name string `json:"name"`
	// The token secret.
	Token string `json:"token"`
}

// GetID returns the value of ID.
func (s *Token) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *Token) GetName() string {
	return s.Name
}

// GetToken returns the value of Token.
func (s *Token) GetToken() string {
	return s.Token
}

// SetID sets the value of ID.
func (s *Token) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Token) SetName(val string) {
	s.Name = val
}

// SetToken sets the value of Token.
func (s *Token) SetToken(val string) {
	s.Token = val
}

// Merged schema.
// Ref: #/components/schemas/Unit
type Unit struct {
	ID    uuid.UUID    `json:"id"`
	Name  string       `json:"name"`
	Alias StorageAlias `json:"alias"`
	// Merged property.
	Address NilString `json:"address"`
}

// GetID returns the value of ID.
func (s *Unit) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *Unit) GetName() string {
	return s.Name
}

// GetAlias returns the value of Alias.
func (s *Unit) GetAlias() StorageAlias {
	return s.Alias
}

// GetAddress returns the value of Address.
func (s *Unit) GetAddress() NilString {
	return s.Address
}

// SetID sets the value of ID.
func (s *Unit) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Unit) SetName(val string) {
	s.Name = val
}

// SetAlias sets the value of Alias.
func (s *Unit) SetAlias(val StorageAlias) {
	s.Alias = val
}

// SetAddress sets the value of Address.
func (s *Unit) SetAddress(val NilString) {
	s.Address = val
}

type UpdateCellForbidden ErrorContent

func (*UpdateCellForbidden) updateCellRes() {}

// Ref: #/components/schemas/UpdateCellRequest
type UpdateCellRequest struct {
	ID       uuid.UUID `json:"id"`
	Alias    string    `json:"alias"`
	Row      int       `json:"row"`
	Level    int       `json:"level"`
	Position int       `json:"position"`
}

// GetID returns the value of ID.
func (s *UpdateCellRequest) GetID() uuid.UUID {
	return s.ID
}

// GetAlias returns the value of Alias.
func (s *UpdateCellRequest) GetAlias() string {
	return s.Alias
}

// GetRow returns the value of Row.
func (s *UpdateCellRequest) GetRow() int {
	return s.Row
}

// GetLevel returns the value of Level.
func (s *UpdateCellRequest) GetLevel() int {
	return s.Level
}

// GetPosition returns the value of Position.
func (s *UpdateCellRequest) GetPosition() int {
	return s.Position
}

// SetID sets the value of ID.
func (s *UpdateCellRequest) SetID(val uuid.UUID) {
	s.ID = val
}

// SetAlias sets the value of Alias.
func (s *UpdateCellRequest) SetAlias(val string) {
	s.Alias = val
}

// SetRow sets the value of Row.
func (s *UpdateCellRequest) SetRow(val int) {
	s.Row = val
}

// SetLevel sets the value of Level.
func (s *UpdateCellRequest) SetLevel(val int) {
	s.Level = val
}

// SetPosition sets the value of Position.
func (s *UpdateCellRequest) SetPosition(val int) {
	s.Position = val
}

// Ref: #/components/schemas/UpdateCellResponse
type UpdateCellResponse struct {
	Data CellBase `json:"data"`
}

// GetData returns the value of Data.
func (s *UpdateCellResponse) GetData() CellBase {
	return s.Data
}

// SetData sets the value of Data.
func (s *UpdateCellResponse) SetData(val CellBase) {
	s.Data = val
}

func (*UpdateCellResponse) updateCellRes() {}

type UpdateCellUnauthorized ErrorContent

func (*UpdateCellUnauthorized) updateCellRes() {}

type UpdateCellsGroupForbidden ErrorContent

func (*UpdateCellsGroupForbidden) updateCellsGroupRes() {}

// Ref: #/components/schemas/UpdateCellsGroupRequest
type UpdateCellsGroupRequest struct {
	Name           string       `json:"name"`
	Alias          StorageAlias `json:"alias"`
	StorageGroupId OptNilUUID   `json:"storageGroupId"`
	UnitId         uuid.UUID    `json:"unitId"`
}

// GetName returns the value of Name.
func (s *UpdateCellsGroupRequest) GetName() string {
	return s.Name
}

// GetAlias returns the value of Alias.
func (s *UpdateCellsGroupRequest) GetAlias() StorageAlias {
	return s.Alias
}

// GetStorageGroupId returns the value of StorageGroupId.
func (s *UpdateCellsGroupRequest) GetStorageGroupId() OptNilUUID {
	return s.StorageGroupId
}

// GetUnitId returns the value of UnitId.
func (s *UpdateCellsGroupRequest) GetUnitId() uuid.UUID {
	return s.UnitId
}

// SetName sets the value of Name.
func (s *UpdateCellsGroupRequest) SetName(val string) {
	s.Name = val
}

// SetAlias sets the value of Alias.
func (s *UpdateCellsGroupRequest) SetAlias(val StorageAlias) {
	s.Alias = val
}

// SetStorageGroupId sets the value of StorageGroupId.
func (s *UpdateCellsGroupRequest) SetStorageGroupId(val OptNilUUID) {
	s.StorageGroupId = val
}

// SetUnitId sets the value of UnitId.
func (s *UpdateCellsGroupRequest) SetUnitId(val uuid.UUID) {
	s.UnitId = val
}

// Ref: #/components/schemas/UpdateCellsGroupResponse
type UpdateCellsGroupResponse struct {
	Data CellGroup `json:"data"`
}

// GetData returns the value of Data.
func (s *UpdateCellsGroupResponse) GetData() CellGroup {
	return s.Data
}

// SetData sets the value of Data.
func (s *UpdateCellsGroupResponse) SetData(val CellGroup) {
	s.Data = val
}

func (*UpdateCellsGroupResponse) updateCellsGroupRes() {}

type UpdateCellsGroupUnauthorized ErrorContent

func (*UpdateCellsGroupUnauthorized) updateCellsGroupRes() {}

// Ref: #/components/schemas/UpdateCurrentUserRequest
type UpdateCurrentUserRequest struct {
	FirstName  string    `json:"first_name"`
	LastName   string    `json:"last_name"`
	MiddleName NilString `json:"middle_name"`
}

// GetFirstName returns the value of FirstName.
func (s *UpdateCurrentUserRequest) GetFirstName() string {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *UpdateCurrentUserRequest) GetLastName() string {
	return s.LastName
}

// GetMiddleName returns the value of MiddleName.
func (s *UpdateCurrentUserRequest) GetMiddleName() NilString {
	return s.MiddleName
}

// SetFirstName sets the value of FirstName.
func (s *UpdateCurrentUserRequest) SetFirstName(val string) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *UpdateCurrentUserRequest) SetLastName(val string) {
	s.LastName = val
}

// SetMiddleName sets the value of MiddleName.
func (s *UpdateCurrentUserRequest) SetMiddleName(val NilString) {
	s.MiddleName = val
}

// Ref: #/components/schemas/UpdateItemRequest
type UpdateItemRequest struct {
	ID          OptUUID      `json:"id"`
	Name        string       `json:"name"`
	Description OptNilString `json:"description"`
}

// GetID returns the value of ID.
func (s *UpdateItemRequest) GetID() OptUUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *UpdateItemRequest) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *UpdateItemRequest) GetDescription() OptNilString {
	return s.Description
}

// SetID sets the value of ID.
func (s *UpdateItemRequest) SetID(val OptUUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UpdateItemRequest) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *UpdateItemRequest) SetDescription(val OptNilString) {
	s.Description = val
}

// Ref: #/components/schemas/UpdateItemResponse
type UpdateItemResponse struct {
	Data ItemFull `json:"data"`
}

// GetData returns the value of Data.
func (s *UpdateItemResponse) GetData() ItemFull {
	return s.Data
}

// SetData sets the value of Data.
func (s *UpdateItemResponse) SetData(val ItemFull) {
	s.Data = val
}

func (*UpdateItemResponse) updateItemRes() {}

type UpdateItemVariantForbidden ErrorContent

func (*UpdateItemVariantForbidden) updateItemVariantRes() {}

// Ref: #/components/schemas/UpdateItemVariantRequest
type UpdateItemVariantRequest struct {
	Name    string       `json:"name"`
	Article OptNilString `json:"article"`
	Ean13   OptNilInt32  `json:"ean13"`
}

// GetName returns the value of Name.
func (s *UpdateItemVariantRequest) GetName() string {
	return s.Name
}

// GetArticle returns the value of Article.
func (s *UpdateItemVariantRequest) GetArticle() OptNilString {
	return s.Article
}

// GetEan13 returns the value of Ean13.
func (s *UpdateItemVariantRequest) GetEan13() OptNilInt32 {
	return s.Ean13
}

// SetName sets the value of Name.
func (s *UpdateItemVariantRequest) SetName(val string) {
	s.Name = val
}

// SetArticle sets the value of Article.
func (s *UpdateItemVariantRequest) SetArticle(val OptNilString) {
	s.Article = val
}

// SetEan13 sets the value of Ean13.
func (s *UpdateItemVariantRequest) SetEan13(val OptNilInt32) {
	s.Ean13 = val
}

// Ref: #/components/schemas/UpdateItemVariantResponse
type UpdateItemVariantResponse struct {
	Data ItemVariant `json:"data"`
}

// GetData returns the value of Data.
func (s *UpdateItemVariantResponse) GetData() ItemVariant {
	return s.Data
}

// SetData sets the value of Data.
func (s *UpdateItemVariantResponse) SetData(val ItemVariant) {
	s.Data = val
}

func (*UpdateItemVariantResponse) updateItemVariantRes() {}

type UpdateItemVariantUnauthorized ErrorContent

func (*UpdateItemVariantUnauthorized) updateItemVariantRes() {}

type UpdateOrganizationForbidden ErrorContent

func (*UpdateOrganizationForbidden) updateOrganizationRes() {}

// Ref: #/components/schemas/UpdateOrganizationRequest
type UpdateOrganizationRequest struct {
	Name string `json:"name"`
}

// GetName returns the value of Name.
func (s *UpdateOrganizationRequest) GetName() string {
	return s.Name
}

// SetName sets the value of Name.
func (s *UpdateOrganizationRequest) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/UpdateOrganizationResponse
type UpdateOrganizationResponse struct {
	Data Organization `json:"data"`
}

// GetData returns the value of Data.
func (s *UpdateOrganizationResponse) GetData() Organization {
	return s.Data
}

// SetData sets the value of Data.
func (s *UpdateOrganizationResponse) SetData(val Organization) {
	s.Data = val
}

func (*UpdateOrganizationResponse) updateOrganizationRes() {}

type UpdateOrganizationUnauthorized ErrorContent

func (*UpdateOrganizationUnauthorized) updateOrganizationRes() {}

type UpdateOrganizationUnitForbidden ErrorContent

func (*UpdateOrganizationUnitForbidden) updateOrganizationUnitRes() {}

// Ref: #/components/schemas/UpdateOrganizationUnitRequest
type UpdateOrganizationUnitRequest struct {
	Name    string       `json:"name"`
	Alias   StorageAlias `json:"alias"`
	Address OptNilString `json:"address"`
}

// GetName returns the value of Name.
func (s *UpdateOrganizationUnitRequest) GetName() string {
	return s.Name
}

// GetAlias returns the value of Alias.
func (s *UpdateOrganizationUnitRequest) GetAlias() StorageAlias {
	return s.Alias
}

// GetAddress returns the value of Address.
func (s *UpdateOrganizationUnitRequest) GetAddress() OptNilString {
	return s.Address
}

// SetName sets the value of Name.
func (s *UpdateOrganizationUnitRequest) SetName(val string) {
	s.Name = val
}

// SetAlias sets the value of Alias.
func (s *UpdateOrganizationUnitRequest) SetAlias(val StorageAlias) {
	s.Alias = val
}

// SetAddress sets the value of Address.
func (s *UpdateOrganizationUnitRequest) SetAddress(val OptNilString) {
	s.Address = val
}

// Ref: #/components/schemas/UpdateOrganizationUnitResponse
type UpdateOrganizationUnitResponse struct {
	Data Unit `json:"data"`
}

// GetData returns the value of Data.
func (s *UpdateOrganizationUnitResponse) GetData() Unit {
	return s.Data
}

// SetData sets the value of Data.
func (s *UpdateOrganizationUnitResponse) SetData(val Unit) {
	s.Data = val
}

func (*UpdateOrganizationUnitResponse) updateOrganizationUnitRes() {}

type UpdateOrganizationUnitUnauthorized ErrorContent

func (*UpdateOrganizationUnitUnauthorized) updateOrganizationUnitRes() {}

type UpdateStorageGroupForbidden ErrorContent

func (*UpdateStorageGroupForbidden) updateStorageGroupRes() {}

// Ref: #/components/schemas/UpdateStorageGroupRequest
type UpdateStorageGroupRequest struct {
	ParentId OptNilUUID   `json:"parentId"`
	Name     string       `json:"name"`
	Alias    StorageAlias `json:"alias"`
	UnitId   uuid.UUID    `json:"unitId"`
}

// GetParentId returns the value of ParentId.
func (s *UpdateStorageGroupRequest) GetParentId() OptNilUUID {
	return s.ParentId
}

// GetName returns the value of Name.
func (s *UpdateStorageGroupRequest) GetName() string {
	return s.Name
}

// GetAlias returns the value of Alias.
func (s *UpdateStorageGroupRequest) GetAlias() StorageAlias {
	return s.Alias
}

// GetUnitId returns the value of UnitId.
func (s *UpdateStorageGroupRequest) GetUnitId() uuid.UUID {
	return s.UnitId
}

// SetParentId sets the value of ParentId.
func (s *UpdateStorageGroupRequest) SetParentId(val OptNilUUID) {
	s.ParentId = val
}

// SetName sets the value of Name.
func (s *UpdateStorageGroupRequest) SetName(val string) {
	s.Name = val
}

// SetAlias sets the value of Alias.
func (s *UpdateStorageGroupRequest) SetAlias(val StorageAlias) {
	s.Alias = val
}

// SetUnitId sets the value of UnitId.
func (s *UpdateStorageGroupRequest) SetUnitId(val uuid.UUID) {
	s.UnitId = val
}

// Ref: #/components/schemas/UpdateStorageGroupResponse
type UpdateStorageGroupResponse struct {
	Data StorageGroup `json:"data"`
}

// GetData returns the value of Data.
func (s *UpdateStorageGroupResponse) GetData() StorageGroup {
	return s.Data
}

// SetData sets the value of Data.
func (s *UpdateStorageGroupResponse) SetData(val StorageGroup) {
	s.Data = val
}

func (*UpdateStorageGroupResponse) updateStorageGroupRes() {}

type UpdateStorageGroupUnauthorized ErrorContent

func (*UpdateStorageGroupUnauthorized) updateStorageGroupRes() {}
